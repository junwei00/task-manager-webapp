{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport TagTask from \"./TagTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(_ref) {\n  _s();\n\n  let {\n    index,\n    setFilteredTaskList,\n    filteredTaskList,\n    task,\n    setTaskList,\n    tagList\n  } = _ref;\n  const [showEditTask, setShowEditTask] = useState(false);\n  const [showTagTask, setShowTagTask] = useState(false);\n\n  function refreshTask() {\n    axios.get(`/api/tasks/${task.id}`).then(res => {\n      let newTaskList = [...filteredTaskList];\n      newTaskList[index] = res.data;\n      setFilteredTaskList(newTaskList);\n      refreshTasklist();\n    }).catch(error => console.log(error));\n  }\n\n  function refreshTasklist() {\n    axios.get(`/api/tasks`).then(res => {\n      setTaskList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function deleteTask() {\n    axios.delete(`/api/tasks/${task.id}`).then(res => {\n      refreshTask();\n    }).catch(error => console.log(error));\n  }\n\n  function toggleFlagTask() {\n    let data = task.status == \"flagged\" ? {\n      status: null\n    } : {\n      status: \"flagged\"\n    };\n    axios.put(`/api/tasks/${task.id}`, data).then(res => {\n      refreshTask();\n    }).catch(error => console.log(error));\n  }\n\n  function toggleDoneTask() {\n    let data = task.status == \"done\" ? {\n      status: null\n    } : {\n      status: \"done\"\n    };\n    axios.put(`/api/tasks/${task.id}`, data).then(res => {\n      refreshTask();\n    }).catch(error => console.log(error));\n  }\n\n  let className = \"Task\";\n\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\";\n  }\n\n  if (task.status == \"done\") {\n    className += \" Task-done\";\n  }\n\n  let tagString = \"\";\n  task.tags.map(tag => {\n    tagString += \"#\" + tag.name + \" \";\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: [task.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), task.tags.map((tag, index) => {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"#\", tag.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"AddTagToTask\",\n        onClick: () => setShowTagTask(!showTagTask),\n        children: showTagTask ? \"-Tags\" : \"+Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }, this), showTagTask ? /*#__PURE__*/_jsxDEV(TagTask, {\n        task: task,\n        tagList: tagList,\n        refreshTask: () => refreshTask()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 24\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"Deadline\",\n      children: [\"Deadline: \", task.deadline]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleFlagTask,\n        children: task.status == 'flagged' ? 'Unflag' : 'Flag'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEditTask(!showEditTask),\n        children: showEditTask ? 'Close' : 'Edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDoneTask,\n        children: task.status == 'done' ? 'Undo' : 'Done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTask,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), showEditTask && /*#__PURE__*/_jsxDEV(EditTask, {\n      task: task,\n      index: index,\n      refreshTask: () => refreshTask(),\n      setShowEditTask: setShowEditTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"E6O+kNljy8TJBkmOI/QdaoyKiZw=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Task.js"],"names":["axios","useState","EditTask","TagTask","Task","index","setFilteredTaskList","filteredTaskList","task","setTaskList","tagList","showEditTask","setShowEditTask","showTagTask","setShowTagTask","refreshTask","get","id","then","res","newTaskList","data","refreshTasklist","catch","error","console","log","deleteTask","delete","toggleFlagTask","status","put","toggleDoneTask","className","tagString","tags","map","tag","name","title","deadline","description"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport TagTask from \"./TagTask\";\n\nfunction Task({ index, setFilteredTaskList, filteredTaskList, task, setTaskList, tagList}) {\n  const [showEditTask, setShowEditTask] = useState(false)\n  const [showTagTask, setShowTagTask] = useState(false)\n\n  function refreshTask() {\n    axios\n      .get(`/api/tasks/${task.id}`)\n      .then((res) => {\n        let newTaskList = [...filteredTaskList]\n        newTaskList[index] = res.data\n        setFilteredTaskList(newTaskList)\n        refreshTasklist()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function refreshTasklist() {\n    axios\n      .get(`/api/tasks`)\n      .then((res) => {\n        setTaskList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function deleteTask() {\n    axios\n      .delete(`/api/tasks/${task.id}`)\n      .then((res) => {\n        refreshTask()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleFlagTask() {\n    let data = (task.status == \"flagged\")\n               ? {status: null}\n               : {status: \"flagged\"}\n    axios\n      .put(`/api/tasks/${task.id}`, data)\n      .then((res) => {\n        refreshTask()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleDoneTask() {\n    let data = (task.status == \"done\")\n               ? {status: null}\n               : {status: \"done\"}\n    axios\n      .put(`/api/tasks/${task.id}`, data)\n      .then((res) => {\n        refreshTask()\n      })\n      .catch((error) => console.log(error))    \n  }\n\n  let className=\"Task\"\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\"\n  }\n  if (task.status == \"done\") {\n    className += \" Task-done\"\n  }\n  \n  let tagString=\"\"\n  task.tags.map((tag) => {\n    tagString += \"#\" + tag.name + \" \"\n  })\n\n  return (\n    <div className={className}>\n      <div className=\"Header\">\n         <h3 className=\"Title\">{task.title} </h3>\n         { task.tags.map((tag, index) => {\n           return <h3>#{tag.name}</h3>\n         }) }\n         <h3 className=\"AddTagToTask\" onClick={() => setShowTagTask(!showTagTask)}>{showTagTask ? \"-Tags\" : \"+Tags\"}</h3>\n         {showTagTask? <TagTask task={task} tagList={tagList} refreshTask={() => refreshTask()}/> : \"\"}\n      </div>\n      <h4 className=\"Deadline\">Deadline: {task.deadline}</h4>\n      <p>{task.description}</p>\n      <div className=\"Buttons\">\n        <button onClick = {toggleFlagTask}>\n          {task.status == 'flagged' ? 'Unflag' : 'Flag'}\n        </button>\n        <button onClick = {() => setShowEditTask(!showEditTask)}>\n        {showEditTask ? 'Close' : 'Edit'}\n        </button>\n        <button onClick = {toggleDoneTask}>\n          {task.status == 'done' ? 'Undo' : 'Done'}\n        </button>\n        <button onClick = {deleteTask}>\n        Delete\n        </button>\n      </div>\n      {showEditTask && <EditTask task={task} index={index} refreshTask={() => refreshTask()} \n        setShowEditTask={setShowEditTask} />}\n    </div>\n  );\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}