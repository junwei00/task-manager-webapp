{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js\";\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  let {\n    setTaskList,\n    setFilteredTaskList,\n    filteredTaskList,\n    tagList,\n    getTags,\n    setTaggedTaskList\n  } = _ref;\n  let remainingTasks = [];\n  let reorderedTasks = [];\n  filteredTaskList.array.forEach(task => {\n    if (task.status !== 'done') {\n      reorderedTasks.push(task);\n    } else {\n      remainingTasks.push(task);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasks\",\n    children: [filteredTaskList.map((task, index) => {\n      if (!(task.status == \"done\")) {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          setFilteredTaskList: setFilteredTaskList,\n          filteredTaskList: filteredTaskList,\n          task: task,\n          setTaskList: setTaskList,\n          tagList: tagList,\n          getTags: getTags,\n          setTaggedTaskList: setTaggedTaskList\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this);\n      }\n    }), filteredTaskList.map((task, index) => {\n      if (task.status == \"done\") {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          setFilteredTaskList: setFilteredTaskList,\n          filteredTaskList: filteredTaskList,\n          task: task,\n          setTaskList: setTaskList,\n          tagList: tagList,\n          getTags: getTags,\n          setTaggedTaskList: setTaggedTaskList\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 18\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js"],"names":["Task","Tasks","setTaskList","setFilteredTaskList","filteredTaskList","tagList","getTags","setTaggedTaskList","remainingTasks","reorderedTasks","array","forEach","task","status","push","map","index","id"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,KAAT,OAA4G;AAAA,MAA7F;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,mBAAf;AAAoCC,IAAAA,gBAApC;AAAsDC,IAAAA,OAAtD;AAA+DC,IAAAA,OAA/D;AAAwEC,IAAAA;AAAxE,GAA6F;AAC1G,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,cAAc,GAAG,EAArB;AACAL,EAAAA,gBAAgB,CAACM,KAAjB,CAAuBC,OAAvB,CAA+BC,IAAI,IAAI;AACrC,QAAIA,IAAI,CAACC,MAAL,KAAgB,MAApB,EAA4B;AAC1BJ,MAAAA,cAAc,CAACK,IAAf,CAAoBF,IAApB;AACD,KAFD,MAEO;AACLJ,MAAAA,cAAc,CAACM,IAAf,CAAoBF,IAApB;AACD;AACF,GAND;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACGR,gBAAgB,CAACW,GAAjB,CAAqB,CAACH,IAAD,EAAOI,KAAP,KAAiB;AACrC,UAAI,EAAEJ,IAAI,CAACC,MAAL,IAAe,MAAjB,CAAJ,EAA8B;AAC5B,4BAAO,QAAC,IAAD;AAAoB,UAAA,KAAK,EAAEG,KAA3B;AAAkC,UAAA,mBAAmB,EAAEb,mBAAvD;AACL,UAAA,gBAAgB,EAAEC,gBADb;AAC+B,UAAA,IAAI,EAAEQ,IADrC;AAC2C,UAAA,WAAW,EAAEV,WADxD;AAEL,UAAA,OAAO,EAAEG,OAFJ;AAEa,UAAA,OAAO,EAAEC,OAFtB;AAE+B,UAAA,iBAAiB,EAAEC;AAFlD,WAAWK,IAAI,CAACK,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGD;AACF,KANA,CADH,EAQGb,gBAAgB,CAACW,GAAjB,CAAqB,CAACH,IAAD,EAAOI,KAAP,KAAiB;AACrC,UAAIJ,IAAI,CAACC,MAAL,IAAe,MAAnB,EAA2B;AACzB,4BAAO,QAAC,IAAD;AAAoB,UAAA,KAAK,EAAEG,KAA3B;AAAkC,UAAA,mBAAmB,EAAEb,mBAAvD;AACL,UAAA,gBAAgB,EAAEC,gBADb;AAC+B,UAAA,IAAI,EAAEQ,IADrC;AAC2C,UAAA,WAAW,EAAEV,WADxD;AAEL,UAAA,OAAO,EAAEG,OAFJ;AAEa,UAAA,OAAO,EAAEC,OAFtB;AAE+B,UAAA,iBAAiB,EAAEC;AAFlD,WAAWK,IAAI,CAACK,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGD;AACF,KANA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KA7BQhB,K;AA+BT,eAAeA,KAAf","sourcesContent":["import Task from './Task'\n\nfunction Tasks({ setTaskList, setFilteredTaskList, filteredTaskList, tagList, getTags, setTaggedTaskList }) {\n  let remainingTasks = []\n  let reorderedTasks = []\n  filteredTaskList.array.forEach(task => {\n    if (task.status !== 'done') {\n      reorderedTasks.push(task)\n    } else {\n      remainingTasks.push(task)\n    }\n  });\n\n  return (\n    <div className=\"Tasks\">\n      {filteredTaskList.map((task, index) => {\n        if (!(task.status == \"done\")) {\n          return <Task key={task.id} index={index} setFilteredTaskList={setFilteredTaskList} \n            filteredTaskList={filteredTaskList} task={task} setTaskList={setTaskList}\n            tagList={tagList} getTags={getTags} setTaggedTaskList={setTaggedTaskList}/>\n        }\n      })}\n      {filteredTaskList.map((task, index) => {\n        if (task.status == \"done\") {\n          return <Task key={task.id} index={index} setFilteredTaskList={setFilteredTaskList} \n            filteredTaskList={filteredTaskList} task={task} setTaskList={setTaskList}\n            tagList={tagList} getTags={getTags} setTaggedTaskList={setTaggedTaskList}/>\n        }\n      })}\n    </div>\n  );\n}\n\nexport default Tasks"]},"metadata":{},"sourceType":"module"}