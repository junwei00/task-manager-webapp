{"ast":null,"code":"import _slicedToArray from\"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NewTask(_ref){var currentUserId=_ref.currentUserId,setShowNewTask=_ref.setShowNewTask,getUserTasks=_ref.getUserTasks;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),deadline=_useState6[0],setDeadline=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),formValid=_useState8[0],setFormValid=_useState8[1];function handleSubmit(e){if(title.length>50||description.length>500){alert('Please keep the title below 50 characters and the description below 500 characters');}else{e.preventDefault();postTaskUser();}}function postTaskUser(){axios.post(\"/api/\".concat(currentUserId,\"/tasks\"),{title:title,description:description,deadline:deadline}).then(function(res){setTitle('');setDescription('');setDeadline('');setShowNewTask(false);getUserTasks();}).catch(function(error){return console.log(error);});}function validateForm(){if(title.length===0){setFormValid(false);}else{setFormValid(true);}}return/*#__PURE__*/_jsxs(\"form\",{className:\"NewTask\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"New Task:\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Title\",value:title,onChange:function onChange(e){validateForm();setTitle(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"textarea\",{className:\"Description\",type:\"text\",placeholder:\"Description\",value:description,onChange:function onChange(e){validateForm();setDescription(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",placeholder:\"Deadline\",value:deadline,onChange:function onChange(e){validateForm();setDeadline(e.target.value);}})}),/*#__PURE__*/_jsx(\"input\",{disabled:!formValid,className:\"Submit\",type:\"submit\",value:\"Save Task\"})]});}export default NewTask;","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/NewTask.js"],"names":["axios","useState","NewTask","currentUserId","setShowNewTask","getUserTasks","title","setTitle","description","setDescription","deadline","setDeadline","formValid","setFormValid","handleSubmit","e","length","alert","preventDefault","postTaskUser","post","then","res","catch","error","console","log","validateForm","target","value"],"mappings":"mIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,QAASC,CAAAA,OAAT,MAAkE,IAA/CC,CAAAA,aAA+C,MAA/CA,aAA+C,CAAhCC,cAAgC,MAAhCA,cAAgC,CAAhBC,YAAgB,MAAhBA,YAAgB,CAChE,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAAsCN,QAAQ,CAAC,EAAD,CAA9C,yCAAOO,WAAP,eAAoBC,cAApB,eACA,eAAgCR,QAAQ,CAAC,EAAD,CAAxC,yCAAOS,QAAP,eAAiBC,WAAjB,eACA,eAAkCV,QAAQ,CAAC,KAAD,CAA1C,yCAAOW,SAAP,eAAkBC,YAAlB,eAEA,QAASC,CAAAA,YAAT,CAAuBC,CAAvB,CAA0B,CACxB,GAAIT,KAAK,CAACU,MAAN,CAAe,EAAf,EAAqBR,WAAW,CAACQ,MAAZ,CAAqB,GAA9C,CAAmD,CACjDC,KAAK,CAAC,oFAAD,CAAL,CACD,CAFD,IAEO,CACLF,CAAC,CAACG,cAAF,GACAC,YAAY,GACb,CACF,CAED,QAASA,CAAAA,YAAT,EAAwB,CACtBnB,KAAK,CACFoB,IADH,gBACgBjB,aADhB,WACuC,CACnCG,KAAK,CAAEA,KAD4B,CAEnCE,WAAW,CAAEA,WAFsB,CAGnCE,QAAQ,CAAEA,QAHyB,CADvC,EAMGW,IANH,CAMQ,SAACC,GAAD,CAAS,CACbf,QAAQ,CAAC,EAAD,CAAR,CACAE,cAAc,CAAC,EAAD,CAAd,CACAE,WAAW,CAAC,EAAD,CAAX,CACAP,cAAc,CAAC,KAAD,CAAd,CACAC,YAAY,GACb,CAZH,EAaGkB,KAbH,CAaS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EAbT,EAcD,CAED,QAASG,CAAAA,YAAT,EAAwB,CACtB,GAAIrB,KAAK,CAACU,MAAN,GAAiB,CAArB,CAAwB,CACtBH,YAAY,CAAC,KAAD,CAAZ,CACD,CAFD,IAEO,CACLA,YAAY,CAAC,IAAD,CAAZ,CACD,CACF,CAED,mBACE,cAAM,SAAS,CAAC,SAAhB,CAA0B,QAAQ,CAAEC,YAApC,wBACE,iCADF,cAEE,kCACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,OAFd,CAGE,KAAK,CAAER,KAHT,CAIE,QAAQ,CAAE,kBAACS,CAAD,CAAO,CACfY,YAAY,GACZpB,QAAQ,CAACQ,CAAC,CAACa,MAAF,CAASC,KAAV,CAAR,CAAyB,CAN7B,EADF,EAFF,cAYE,kCACE,iBACE,SAAS,CAAC,aADZ,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,aAHd,CAIE,KAAK,CAAErB,WAJT,CAKE,QAAQ,CAAE,kBAACO,CAAD,CAAO,CACfY,YAAY,GACZlB,cAAc,CAACM,CAAC,CAACa,MAAF,CAASC,KAAV,CAAd,CAA+B,CAPnC,EADF,EAZF,cAuBE,kCACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,UAFd,CAGE,KAAK,CAAEnB,QAHT,CAIE,QAAQ,CAAE,kBAACK,CAAD,CAAO,CACfY,YAAY,GACZhB,WAAW,CAACI,CAAC,CAACa,MAAF,CAASC,KAAV,CAAX,CAA4B,CANhC,EADF,EAvBF,cAiCE,cAAO,QAAQ,CAAE,CAACjB,SAAlB,CAA6B,SAAS,CAAC,QAAvC,CAAgD,IAAI,CAAC,QAArD,CAA8D,KAAK,CAAC,WAApE,EAjCF,GADF,CAqCD,CAED,cAAeV,CAAAA,OAAf","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction NewTask({ currentUserId, setShowNewTask, getUserTasks }) {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [deadline, setDeadline] = useState('')\n  const [formValid, setFormValid] = useState(false)\n\n  function handleSubmit (e) {\n    if (title.length > 50 || description.length > 500) {\n      alert('Please keep the title below 50 characters and the description below 500 characters')\n    } else {\n      e.preventDefault()\n      postTaskUser()\n    }\n  }\n\n  function postTaskUser() {\n    axios\n      .post(`/api/${currentUserId}/tasks`, {\n        title: title,\n        description: description,\n        deadline: deadline\n      })\n      .then((res) => {\n        setTitle('')\n        setDescription('')\n        setDeadline('')\n        setShowNewTask(false)\n        getUserTasks()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function validateForm() {\n    if (title.length === 0) {\n      setFormValid(false)\n    } else {\n      setFormValid(true)\n    }\n  }\n\n  return (\n    <form className=\"NewTask\" onSubmit={handleSubmit}>\n      <h3>New Task:</h3>\n      <div>\n        <input\n          type='text'\n          placeholder='Title'\n          value={title}\n          onChange={(e) => {\n            validateForm()\n            setTitle(e.target.value)}}\n        />\n      </div>\n      <div>\n        <textarea\n          className=\"Description\"\n          type='text'\n          placeholder='Description'\n          value={description}\n          onChange={(e) => {\n            validateForm()\n            setDescription(e.target.value)}}\n        />\n      </div>\n      <div>\n        <input\n          type='date'\n          placeholder='Deadline'\n          value={deadline}\n          onChange={(e) => {\n            validateForm()\n            setDeadline(e.target.value)}}\n        />\n      </div>\n      <input disabled={!formValid} className=\"Submit\" type='submit' value='Save Task'/>\n    </form>\n  );\n}\n\nexport default NewTask"]},"metadata":{},"sourceType":"module"}