{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport Tasks from './components/Tasks';\nimport Topbar from './components/Topbar';\nimport Sidebar from './components/Sidebar';\nimport NewTask from './components/NewTask';\nimport Users from './components/Users';\nimport EditUser from './components/EditUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showNewTask, setShowNewTask] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  const [taggedTaskList, setTaggedTaskList] = useState([]);\n  const [filteredTaskList, setFilteredTaskList] = useState([]);\n  const [tagList, setTagList] = useState([]);\n  const [currentSort, setCurrentSort] = useState('Created');\n  const [userList, setUserList] = useState([]);\n  const [currentUserId, setCurrentUserId] = useState(-1);\n  const [currentUsername, setCurrentUsername] = useState('');\n  const [showEditUser, setShowEditUser] = useState(false);\n\n  function getUserTasks() {\n    axios.get(`/api/${currentUserId}/tasks`).then(res => {\n      setTaskList(res.data);\n      setTaggedTaskList(res.data);\n      setFilteredTaskList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function getUserTags() {\n    axios.get(`/api/${currentUserId}/tags`).then(res => {\n      setTagList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function getUsers() {\n    axios.get(\"/api/users\").then(res => {\n      setUserList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function filterTasksByTag(id) {\n    let result = [];\n    result = taskList.filter(task => {\n      let tags = task.tags.map(tag => {\n        return tag.id;\n      });\n      return tags.includes(id);\n    });\n    result = sortTasks('Current', result);\n    setTaggedTaskList(result);\n    setFilteredTaskList(result);\n  }\n\n  function resetTagFilter() {\n    setFilteredTaskList(sortTasks('Current', taskList));\n  }\n\n  function handleSearch(e) {\n    let searchTerm = e.target.value.toLowerCase();\n    let result = [];\n    result = taggedTaskList.filter(task => task.title.toLowerCase().search(searchTerm) != -1);\n    setFilteredTaskList(result);\n  }\n\n  function handleSort(sortBy) {\n    setFilteredTaskList(sortTasks(sortBy, filteredTaskList));\n  }\n\n  function sortTasks(sortBy, list) {\n    if (sortBy === 'Current') {\n      sortBy = currentSort;\n    } else {\n      setCurrentSort(sortBy);\n    }\n\n    let result = [...list];\n\n    if (sortBy == \"Created\") {\n      result.sort((task1, task2) => {\n        if (task1.created_at > task2.created_at) return -1;\n        if (task2.created_at > task1.created_at) return 1;\n        return 0;\n      });\n    } else if (sortBy == \"Edited\") {\n      result.sort((task1, task2) => {\n        if (task1.updated_at > task2.updated_at) return -1;\n        if (task2.updated_at > task1.updated_at) return 1;\n        return 0;\n      });\n    } else if (sortBy == \"Deadline\") {\n      result.sort((task1, task2) => {\n        if (task1.deadline === null) return 1;\n        if (task2.deadline === null) return -1;\n        if (task1.deadline > task2.deadline) return 1;\n        if (task2.deadline > task1.deadline) return -1;\n        return 0;\n      });\n    } else if (sortBy == \"Alphanumeric\") {\n      result.sort((task1, task2) => task1.title.localeCompare(task2.title));\n    } else {\n      console.log(\"Error: Unknown sorting case:\" + sortBy);\n    }\n\n    return result;\n  }\n\n  function refreshTask(updatedTask) {\n    function newList(oldList) {\n      return oldList.map(task => {\n        return task.id === updatedTask.id ? updatedTask : task;\n      });\n    }\n\n    setFilteredTaskList(newList(filteredTaskList));\n    setTaggedTaskList(newList(taggedTaskList));\n    setTaskList(newList(taskList));\n  }\n\n  const mainPage = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      currentUserId: currentUserId,\n      currentUsername: currentUsername,\n      tagList: tagList,\n      getUserTags: getUserTags,\n      filterTasksByTag: filterTasksByTag,\n      resetTagFilter: resetTagFilter,\n      taskList: taskList,\n      setShowEditUser: setShowEditUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {\n        handleSearch: handleSearch,\n        handleSort: handleSort,\n        buttonState: showNewTask,\n        onClickNewTask: () => setShowNewTask(!showNewTask)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), showNewTask && /*#__PURE__*/_jsxDEV(NewTask, {\n        currentUserId: currentUserId,\n        setShowNewTask: setShowNewTask,\n        getUserTasks: getUserTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        currentUserId: currentUserId,\n        setTaskList: setTaskList,\n        setFilteredTaskList: setFilteredTaskList,\n        tagList: tagList,\n        filteredTaskList: filteredTaskList,\n        getUserTags: () => getUserTags(),\n        setTaggedTaskList: setTaggedTaskList,\n        refreshTask: refreshTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n\n  useEffect(() => {\n    getUsers();\n\n    if (currentUserId !== -1) {\n      getUserTasks();\n      getUserTags();\n    }\n  }, [currentUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currentUserId === -1 ? /*#__PURE__*/_jsxDEV(Users, {\n      userList: userList,\n      setCurrentUserId: setCurrentUserId,\n      setCurrentUsername: setCurrentUsername,\n      getUsers: getUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }, this) : mainPage, showEditUser && /*#__PURE__*/_jsxDEV(EditUser, {\n      currentUserId: currentUserId,\n      currentUsername: currentUsername,\n      setCurrentUsername: setCurrentUsername,\n      setShowEditUser: setShowEditUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wpjiF6woS3JHIZ+X6zvbFf5X25c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/App.js"],"names":["useState","useEffect","axios","Tasks","Topbar","Sidebar","NewTask","Users","EditUser","App","showNewTask","setShowNewTask","taskList","setTaskList","taggedTaskList","setTaggedTaskList","filteredTaskList","setFilteredTaskList","tagList","setTagList","currentSort","setCurrentSort","userList","setUserList","currentUserId","setCurrentUserId","currentUsername","setCurrentUsername","showEditUser","setShowEditUser","getUserTasks","get","then","res","data","catch","error","console","log","getUserTags","getUsers","filterTasksByTag","id","result","filter","task","tags","map","tag","includes","sortTasks","resetTagFilter","handleSearch","e","searchTerm","target","value","toLowerCase","title","search","handleSort","sortBy","list","sort","task1","task2","created_at","updated_at","deadline","localeCompare","refreshTask","updatedTask","newList","oldList","mainPage"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.css'\nimport axios from \"axios\"\nimport Tasks from './components/Tasks'\nimport Topbar from './components/Topbar'\nimport Sidebar from './components/Sidebar'\nimport NewTask from './components/NewTask'\nimport Users from './components/Users'\nimport EditUser from './components/EditUser'\n\nfunction App() {\n  const [showNewTask, setShowNewTask] = useState(false)\n  const [taskList, setTaskList] = useState([])\n  const [taggedTaskList, setTaggedTaskList] = useState([])\n  const [filteredTaskList, setFilteredTaskList] = useState([])\n  const [tagList, setTagList] = useState([])\n  const [currentSort, setCurrentSort] = useState('Created')\n  const [userList, setUserList] = useState([])\n  const [currentUserId, setCurrentUserId] = useState(-1)\n  const [currentUsername, setCurrentUsername] = useState('')\n  const [showEditUser, setShowEditUser] = useState(false)\n\n  function getUserTasks() {\n    axios\n      .get(`/api/${currentUserId}/tasks`)\n      .then((res) => {\n        setTaskList(res.data)\n        setTaggedTaskList(res.data)\n        setFilteredTaskList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getUserTags() {\n    axios\n      .get(`/api/${currentUserId}/tags`)\n      .then((res) => {\n        setTagList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getUsers() {\n    axios\n      .get(\"/api/users\")\n      .then((res) => {\n        setUserList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function filterTasksByTag(id) {\n    let result = []\n    result = taskList.filter((task) => {\n      let tags = task.tags.map((tag) => {return tag.id})\n      return tags.includes(id)\n    })\n    result = sortTasks('Current', result)\n    setTaggedTaskList(result)\n    setFilteredTaskList(result)\n  }\n\n  function resetTagFilter() {\n    setFilteredTaskList(sortTasks('Current', taskList))\n  }\n\n  function handleSearch(e) {\n    let searchTerm = e.target.value.toLowerCase()\n    let result = []\n    result = taggedTaskList.filter((task) =>\n      task.title.toLowerCase().search(searchTerm) != -1\n    )\n    setFilteredTaskList(result)\n  }\n\n  function handleSort(sortBy) {\n    setFilteredTaskList(sortTasks(sortBy, filteredTaskList))\n  }\n\n  function sortTasks(sortBy, list) {\n    if (sortBy === 'Current') {\n      sortBy = currentSort\n    } else {\n      setCurrentSort(sortBy)\n    }\n    let result = [...list]\n    if (sortBy == \"Created\") {\n      result.sort((task1, task2) => \n        {if (task1.created_at > task2.created_at) return -1\n         if (task2.created_at > task1.created_at) return 1\n         return 0})\n    } else if (sortBy == \"Edited\") {\n      result.sort((task1, task2) => \n        {if (task1.updated_at > task2.updated_at) return -1\n         if (task2.updated_at > task1.updated_at) return 1\n         return 0})\n    } else if (sortBy == \"Deadline\") {\n      result.sort((task1, task2) => \n        {if (task1.deadline === null) return 1\n         if (task2.deadline === null) return -1\n         if (task1.deadline > task2.deadline) return 1\n         if (task2.deadline > task1.deadline) return -1\n         return 0})\n    } else if (sortBy == \"Alphanumeric\") {\n      result.sort((task1, task2) => \n        task1.title.localeCompare(task2.title))\n    } else {\n      console.log(\"Error: Unknown sorting case:\" + sortBy)\n    }\n    return result\n  }\n\n  function refreshTask(updatedTask) {\n    function newList(oldList) {\n      return oldList.map((task) => {\n        return (\n          (task.id === updatedTask.id)\n          ? updatedTask\n          : task)})\n    }\n    setFilteredTaskList(newList(filteredTaskList))\n    setTaggedTaskList(newList(taggedTaskList))\n    setTaskList(newList(taskList))\n  }\n\n  const mainPage = \n    <div>\n      <Sidebar \n        currentUserId={currentUserId}\n        currentUsername={currentUsername} \n        tagList={tagList} \n        getUserTags={getUserTags} \n        filterTasksByTag={filterTasksByTag}\n        resetTagFilter={resetTagFilter}\n        taskList={taskList} \n        setShowEditUser={setShowEditUser}/>\n      <div className='Main'>\n        <Topbar \n          handleSearch={handleSearch} \n          handleSort={handleSort}\n          buttonState={showNewTask} \n          onClickNewTask={() => setShowNewTask(!showNewTask)} />\n        {showNewTask && \n          <NewTask \n            currentUserId={currentUserId}\n            setShowNewTask={setShowNewTask} \n            getUserTasks={getUserTasks} />}\n        <Tasks \n          currentUserId={currentUserId}\n          setTaskList={setTaskList} \n          setFilteredTaskList={setFilteredTaskList} \n          tagList={tagList} \n          filteredTaskList={filteredTaskList} \n          getUserTags={() => getUserTags()}\n          setTaggedTaskList={setTaggedTaskList}\n          refreshTask={refreshTask} />\n      </div>\n    </div>\n\n  useEffect(() => {\n    getUsers()\n    if (currentUserId !== -1) {\n      getUserTasks()\n      getUserTags()\n    }\n  }, [currentUserId])\n\n  return (\n    <div className=\"App\">\n      {\n        (currentUserId === -1)\n        ? <Users \n            userList={userList} \n            setCurrentUserId={setCurrentUserId}\n            setCurrentUsername={setCurrentUsername}\n            getUsers={getUsers}/>\n        : mainPage\n      }\n      {\n        (showEditUser)\n        && <EditUser \n              currentUserId={currentUserId}\n              currentUsername={currentUsername}\n              setCurrentUsername={setCurrentUsername}\n              setShowEditUser={setShowEditUser}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}