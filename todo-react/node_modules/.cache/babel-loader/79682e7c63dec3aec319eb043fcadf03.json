{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport Tasks from './components/Tasks';\nimport Topbar from './components/Topbar';\nimport Sidebar from './components/Sidebar';\nimport NewTask from './components/NewTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showNewTask, setShowNewTask] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  const [filteredTaskList, setFilteredTaskList] = useState([]);\n  const [tagList, setTagList] = useState([]);\n\n  function getTasks() {\n    axios.get(\"/api/tasks\").then(res => {\n      setTaskList(res.data);\n      setFilteredTaskList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function getTasksByTag(tagname) {\n    axios.get(`/api/tags/${tagname}`).then(res => {\n      console.log(res.data.tasks);\n    }).catch(error => console.log(error));\n  }\n\n  function getTags() {\n    axios.get(\"/api/tags\").then(res => {\n      setTagList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function handleSearch(e) {\n    let searchTerm = e.target.value.toLowerCase();\n    let result = [];\n    result = taskList.filter(task => task.title.toLowerCase().search(searchTerm) != -1);\n    setFilteredTaskList(result);\n  }\n\n  function handleSort(e) {\n    let sortBy = e.target.value;\n    let result = [...filteredTaskList];\n\n    if (sortBy == \"Created\") {\n      result.sort((task1, task2) => {\n        if (task1.created_at > task2.created_at) return -1;\n        if (task2.created_at > task1.created_at) return 1;\n        return 0;\n      });\n    } else if (sortBy == \"Deadline\") {\n      result.sort((task1, task2) => {\n        if (task1.deadline > task2.deadline) return 1;\n        if (task2.deadline > task1.deadline) return -1;\n        return 0;\n      });\n    } else if (sortBy == \"Alphanumeric\") {\n      result.sort((task1, task2) => task1.title.localeCompare(task2.title));\n    } else {\n      console.log(\"Error: Unknown sorting case\");\n    }\n\n    setFilteredTaskList(result);\n  }\n\n  useEffect(() => {\n    getTasks();\n    getTags();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      tagList: tagList,\n      getTags: getTags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {\n        handleSearch: handleSearch,\n        handleSort: handleSort,\n        buttonState: showNewTask,\n        onClickNewTask: () => setShowNewTask(!showNewTask)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), showNewTask && /*#__PURE__*/_jsxDEV(NewTask, {\n        setShowNewTask: setShowNewTask,\n        getTasks: getTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        setTaskList: setTaskList,\n        setFilteredTaskList: setFilteredTaskList,\n        tagList: tagList,\n        filteredTaskList: filteredTaskList,\n        getTags: () => getTags()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PERHMCQK6+UyE5cp/rIIPAxWvg0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/App.js"],"names":["useState","useEffect","axios","Tasks","Topbar","Sidebar","NewTask","App","showNewTask","setShowNewTask","taskList","setTaskList","filteredTaskList","setFilteredTaskList","tagList","setTagList","getTasks","get","then","res","data","catch","error","console","log","getTasksByTag","tagname","tasks","getTags","handleSearch","e","searchTerm","target","value","toLowerCase","result","filter","task","title","search","handleSort","sortBy","sort","task1","task2","created_at","deadline","localeCompare"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.css'\nimport axios from \"axios\"\nimport Tasks from './components/Tasks'\nimport Topbar from './components/Topbar'\nimport Sidebar from './components/Sidebar'\nimport NewTask from './components/NewTask'\n\nfunction App() {\n  const [showNewTask, setShowNewTask] = useState(false)\n  const [taskList, setTaskList] = useState([])\n  const [filteredTaskList, setFilteredTaskList] = useState([])\n  const [tagList, setTagList] = useState([])\n\n  function getTasks() {\n    axios\n      .get(\"/api/tasks\")\n      .then((res) => {\n        setTaskList(res.data)\n        setFilteredTaskList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getTasksByTag(tagname) {\n    axios\n      .get(`/api/tags/${tagname}`)\n      .then((res) => {\n        console.log(res.data.tasks)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getTags() {\n    axios\n      .get(\"/api/tags\")\n      .then((res) => {\n        setTagList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function handleSearch(e) {\n    let searchTerm = e.target.value.toLowerCase()\n    let result = []\n    result = taskList.filter((task) =>\n      task.title.toLowerCase().search(searchTerm) != -1\n    )\n    setFilteredTaskList(result)\n  }\n\n  function handleSort(e) {\n    let sortBy = e.target.value\n    let result = [...filteredTaskList]\n    if (sortBy == \"Created\") {\n      result.sort((task1, task2) => \n        {if (task1.created_at > task2.created_at) return -1\n         if (task2.created_at > task1.created_at) return 1\n         return 0})\n    } else if (sortBy == \"Deadline\") {\n      result.sort((task1, task2) => \n        {if (task1.deadline > task2.deadline) return 1\n         if (task2.deadline > task1.deadline) return -1\n         return 0})\n    } else if (sortBy == \"Alphanumeric\") {\n      result.sort((task1, task2) => \n        task1.title.localeCompare(task2.title))\n    } else {\n      console.log(\"Error: Unknown sorting case\")\n    }\n    setFilteredTaskList(result)\n  }\n\n  useEffect(() => {\n    getTasks()\n    getTags()\n  }, [])\n  \n  return (\n    <div className=\"App\">\n      <Sidebar tagList={tagList} getTags={getTags}/>\n      <div className='Main'>\n        <Topbar handleSearch={handleSearch} handleSort={handleSort} \n          buttonState={showNewTask} onClickNewTask={() => setShowNewTask(!showNewTask)} />\n        {showNewTask && <NewTask setShowNewTask={setShowNewTask} getTasks={getTasks}/> }\n        <Tasks setTaskList={setTaskList} setFilteredTaskList={setFilteredTaskList} \n          tagList={tagList} filteredTaskList={filteredTaskList} getTags={() => getTags()}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}