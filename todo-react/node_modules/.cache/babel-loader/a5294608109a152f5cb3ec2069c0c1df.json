{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/cvwo-todo-app/todo-react/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(_ref) {\n  _s();\n\n  let {\n    task,\n    getTasks\n  } = _ref;\n  const [showEditTask, setShowEditTask] = useState(false);\n\n  function deleteTask() {\n    axios.delete(`/api/tasks/${task.id}`).then(res => {\n      getTasks();\n    }).catch(error => console.log(error));\n  }\n\n  function toggleFlagTask() {\n    let data = task.status == \"flagged\" ? {\n      status: null\n    } : {\n      status: \"flagged\"\n    };\n    axios.put(`/api/tasks/${task.id}`, data).then(res => {\n      getTasks();\n    }).catch(error => console.log(error));\n  }\n\n  function toggleDoneTask() {\n    let data = task.status == \"done\" ? {\n      status: null\n    } : {\n      status: \"done\"\n    };\n    axios.put(`/api/tasks/${task.id}`, data).then(res => {\n      getTasks();\n    }).catch(error => console.log(error));\n  }\n\n  let className = \"Task\";\n\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\";\n  }\n\n  if (task.status == \"done\") {\n    className += \" Task-done\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Title\",\n      children: [task.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"Deadline\",\n      children: [\"Deadline: \", task.deadline]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleFlagTask,\n        children: task.status == 'flagged' ? 'Unflag' : 'Flag'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEditTask(!showEditTask),\n        children: showEditTask ? 'Close' : 'Edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDoneTask,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTask,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), showEditTask && /*#__PURE__*/_jsxDEV(EditTask, {\n      task: task,\n      getTasks: getTasks,\n      setShowEditTask: setShowEditTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"G3TJSRdPN5FfRCs5cU2/7k2zg90=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/oaeiu/cvwo-todo-app/todo-react/src/components/Task.js"],"names":["axios","useState","EditTask","Task","task","getTasks","showEditTask","setShowEditTask","deleteTask","delete","id","then","res","catch","error","console","log","toggleFlagTask","data","status","put","toggleDoneTask","className","title","deadline","description"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\n\nfunction Task({ task, getTasks }) {\n  const [showEditTask, setShowEditTask] = useState(false)\n\n  function deleteTask() {\n    axios\n      .delete(`/api/tasks/${task.id}`)\n      .then((res) => {\n        getTasks()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleFlagTask() {\n    let data = (task.status == \"flagged\")\n               ? {status: null}\n               : {status: \"flagged\"}\n    axios\n      .put(`/api/tasks/${task.id}`, data)\n      .then((res) => {\n        getTasks()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleDoneTask() {\n    let data = (task.status == \"done\")\n               ? {status: null}\n               : {status: \"done\"}\n    axios\n      .put(`/api/tasks/${task.id}`, data)\n      .then((res) => {\n        getTasks()\n      })\n      .catch((error) => console.log(error))    \n  }\n\n  let className=\"Task\"\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\"\n  }\n  if (task.status == \"done\") {\n    className += \" Task-done\"\n  }\n  \n  return (\n    <div className={className}>\n      <h3 className=\"Title\">{task.title} </h3>\n      <h4 className=\"Deadline\">Deadline: {task.deadline}</h4>\n      <p>{task.description}</p>\n      <div className=\"Buttons\">\n        <button onClick = {toggleFlagTask}>\n          {task.status == 'flagged' ? 'Unflag' : 'Flag'}\n        </button>\n        <button onClick = {() => setShowEditTask(!showEditTask)}>\n        {showEditTask ? 'Close' : 'Edit'}\n        </button>\n        <button onClick = {toggleDoneTask}>\n          Done\n        </button>\n        <button onClick = {deleteTask}>\n        Delete\n        </button>\n      </div>\n      {showEditTask && <EditTask task={task} getTasks={getTasks} setShowEditTask={setShowEditTask} />}\n    </div>\n  );\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}