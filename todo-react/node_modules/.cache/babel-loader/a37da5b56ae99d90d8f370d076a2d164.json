{"ast":null,"code":"import _toConsumableArray from\"/home/oaeiu/cvwo-todo-app/todo-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/oaeiu/cvwo-todo-app/todo-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useState}from\"react\";import EditTask from\"./EditTask\";import TagTask from\"./TagTask\";import Tag from\"./Tag\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Task(_ref){var index=_ref.index,task=_ref.task,setFilteredTaskList=_ref.setFilteredTaskList,filteredTaskList=_ref.filteredTaskList,setTaskList=_ref.setTaskList,tagList=_ref.tagList,getTags=_ref.getTags;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showEditTask=_useState2[0],setShowEditTask=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showTagTask=_useState4[0],setShowTagTask=_useState4[1];function _refreshTask(){axios.get(\"/api/tasks/\".concat(task.id)).then(function(res){var newTaskList=_toConsumableArray(filteredTaskList);newTaskList[index]=res.data;setFilteredTaskList(newTaskList);refreshTasklist();getTags();}).catch(function(error){return console.log(error);});}function refreshTasklist(){axios.get(\"/api/tasks\").then(function(res){setTaskList(res.data);}).catch(function(error){return console.log(error);});}function deleteTask(){axios.delete(\"/api/tasks/\".concat(task.id)).then(function(res){_refreshTask();}).catch(function(error){return console.log(error);});}function toggleFlagTask(){var data=task.status==\"flagged\"?{status:null}:{status:\"flagged\"};axios.put(\"/api/tasks/\".concat(task.id),data).then(function(res){_refreshTask();}).catch(function(error){return console.log(error);});}function toggleDoneTask(){var data=task.status==\"done\"?{status:null}:{status:\"done\"};axios.put(\"/api/tasks/\".concat(task.id),data).then(function(res){_refreshTask();}).catch(function(error){return console.log(error);});}var className=\"Task\";if(task.status==\"flagged\"){className+=\" Task-flagged\";}if(task.status==\"done\"){className+=\" Task-done\";}var tagString=\"\";task.tags.map(function(tag){tagString+=\"#\"+tag.name+\" \";});return/*#__PURE__*/_jsxs(\"div\",{className:className,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Header\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"Title\",children:[task.title,\" \"]}),task.tags.map(function(tag,index){return/*#__PURE__*/_jsx(Tag,{tag:tag,refreshTask:function refreshTask(){return _refreshTask();},task:task},index);}),/*#__PURE__*/_jsx(\"h3\",{className:\"AddTagToTask\",onClick:function onClick(){return setShowTagTask(!showTagTask);},children:showTagTask?\"-Tags\":\"+Tags\"}),showTagTask?/*#__PURE__*/_jsx(TagTask,{task:task,tagList:tagList,refreshTask:function refreshTask(){return _refreshTask();}}):\"\"]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"Deadline\",children:[\"Deadline: \",task.deadline]}),/*#__PURE__*/_jsx(\"p\",{children:task.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"Buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:toggleDoneTask,children:task.status=='done'?'Undo':'Done'}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleFlagTask,children:task.status=='flagged'?'Unflag':'Flag'}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setShowEditTask(!showEditTask);},children:showEditTask?'Close':'Edit'}),/*#__PURE__*/_jsx(\"button\",{onClick:deleteTask,children:\"Delete\"})]}),showEditTask&&/*#__PURE__*/_jsx(EditTask,{task:task,index:index,refreshTask:function refreshTask(){return _refreshTask();},setShowEditTask:setShowEditTask})]});}export default Task;","map":{"version":3,"sources":["/home/oaeiu/cvwo-todo-app/todo-react/src/components/Task.js"],"names":["axios","useState","EditTask","TagTask","Tag","Task","index","task","setFilteredTaskList","filteredTaskList","setTaskList","tagList","getTags","showEditTask","setShowEditTask","showTagTask","setShowTagTask","refreshTask","get","id","then","res","newTaskList","data","refreshTasklist","catch","error","console","log","deleteTask","delete","toggleFlagTask","status","put","toggleDoneTask","className","tagString","tags","map","tag","name","title","deadline","description"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport TagTask from \"./TagTask\";\nimport Tag from \"./Tag\"\n\nfunction Task({ index, task,  setFilteredTaskList, filteredTaskList, setTaskList, tagList, getTags}) {\n  const [showEditTask, setShowEditTask] = useState(false)\n  const [showTagTask, setShowTagTask] = useState(false)\n\n  function refreshTask() {\n    axios\n      .get(`/api/tasks/${task.id}`)\n      .then((res) => {\n        let newTaskList = [...filteredTaskList]\n        newTaskList[index] = res.data\n        setFilteredTaskList(newTaskList)\n        refreshTasklist()\n        getTags()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function refreshTasklist() {\n    axios\n      .get(`/api/tasks`)\n      .then((res) => {\n        setTaskList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function deleteTask() {\n    axios\n      .delete(`/api/tasks/${task.id}`)\n      .then((res) => {\n        refreshTask()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleFlagTask() {\n    let data = (task.status == \"flagged\")\n               ? {status: null}\n               : {status: \"flagged\"}\n    axios\n      .put(`/api/tasks/${task.id}`, data)\n      .then((res) => {\n        refreshTask()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleDoneTask() {\n    let data = (task.status == \"done\")\n               ? {status: null}\n               : {status: \"done\"}\n    axios\n      .put(`/api/tasks/${task.id}`, data)\n      .then((res) => {\n        refreshTask()\n      })\n      .catch((error) => console.log(error))    \n  }\n\n  let className=\"Task\"\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\"\n  }\n  if (task.status == \"done\") {\n    className += \" Task-done\"\n  }\n  \n  let tagString=\"\"\n  task.tags.map((tag) => {\n    tagString += \"#\" + tag.name + \" \"\n  })\n\n  return (\n    <div className={className}>\n      <div className=\"Header\">\n         <h3 className=\"Title\">{task.title} </h3>\n         { task.tags.map((tag, index) => {\n           return <Tag key={index} tag={tag} refreshTask={() => refreshTask()} task={task}/>\n         }) }\n         <h3 className=\"AddTagToTask\" onClick={() => setShowTagTask(!showTagTask)}>{showTagTask ? \"-Tags\" : \"+Tags\"}</h3>\n         {showTagTask? <TagTask task={task} tagList={tagList} refreshTask={() => refreshTask()}/> : \"\"}\n      </div>\n      <h4 className=\"Deadline\">Deadline: {task.deadline}</h4>\n      <p>{task.description}</p>\n      <div className=\"Buttons\">\n        <button onClick = {toggleDoneTask}>\n          {task.status == 'done' ? 'Undo' : 'Done'}\n        </button>\n        <button onClick = {toggleFlagTask}>\n          {task.status == 'flagged' ? 'Unflag' : 'Flag'}\n        </button>\n        <button onClick = {() => setShowEditTask(!showEditTask)}>\n        {showEditTask ? 'Close' : 'Edit'}\n        </button>\n        <button onClick = {deleteTask}>\n        Delete\n        </button>\n      </div>\n      {showEditTask && <EditTask task={task} index={index} refreshTask={() => refreshTask()} \n        setShowEditTask={setShowEditTask} />}\n    </div>\n  );\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}