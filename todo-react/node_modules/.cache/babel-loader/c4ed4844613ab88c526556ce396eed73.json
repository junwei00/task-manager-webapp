{"ast":null,"code":"import _slicedToArray from\"/home/oaeiu/cvwo-todo-app/todo-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useState}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Tag(_ref){var tag=_ref.tag,refreshTask=_ref.refreshTask,task=_ref.task;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isHover=_useState2[0],setIsHover=_useState2[1];function deleteTagFromTask(){axios.put(\"/api/tags/\".concat(tag.id),{do:\"delete\",task:task.id}).then(function(res){refreshTask();}).catch(function(error){return console.log(error);});}return/*#__PURE__*/_jsxs(\"h3\",{className:\"TagName\",onMouseEnter:function onMouseEnter(){return setIsHover(true);},onMouseLeave:function onMouseLeave(){return setIsHover(false);},onClick:deleteTagFromTask,children:[isHover?\"-\":\"#\",tag.name]});}export default Tag;","map":{"version":3,"sources":["/home/oaeiu/cvwo-todo-app/todo-react/src/components/Tag.js"],"names":["axios","useState","Tag","tag","refreshTask","task","isHover","setIsHover","deleteTagFromTask","put","id","do","then","res","catch","error","console","log","name"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,C,6CAEA,QAASC,CAAAA,GAAT,MAAyC,IAA1BC,CAAAA,GAA0B,MAA1BA,GAA0B,CAArBC,WAAqB,MAArBA,WAAqB,CAARC,IAAQ,MAARA,IAAQ,CACvC,cAA8BJ,QAAQ,CAAC,KAAD,CAAtC,wCAAOK,OAAP,eAAgBC,UAAhB,eAEA,QAASC,CAAAA,iBAAT,EAA6B,CAC3BR,KAAK,CACFS,GADH,qBACoBN,GAAG,CAACO,EADxB,EAC8B,CAC1BC,EAAE,CAAE,QADsB,CAE1BN,IAAI,CAAEA,IAAI,CAACK,EAFe,CAD9B,EAKGE,IALH,CAKQ,SAACC,GAAD,CAAS,CACbT,WAAW,GACZ,CAPH,EAQGU,KARH,CAQS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EART,EASD,CAED,mBACE,YAAI,SAAS,CAAC,SAAd,CAAwB,YAAY,CAAE,8BAAMR,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAAtC,CACE,YAAY,CAAE,8BAAMA,CAAAA,UAAU,CAAC,KAAD,CAAhB,EADhB,CACyC,OAAO,CAAEC,iBADlD,WAEGF,OAAO,CAAG,GAAH,CAAS,GAFnB,CAGGH,GAAG,CAACe,IAHP,GADF,CAMD,CAED,cAAehB,CAAAA,GAAf","sourcesContent":["import axios from \"axios\"\nimport { useState } from \"react\"\n\nfunction Tag({ tag, refreshTask, task }) {\n  const [isHover, setIsHover] = useState(false)\n\n  function deleteTagFromTask() {\n    axios\n      .put(`/api/tags/${tag.id}`, {\n        do: \"delete\",\n        task: task.id\n      })\n      .then((res) => {\n        refreshTask()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  return (\n    <h3 className=\"TagName\" onMouseEnter={() => setIsHover(true)} \n      onMouseLeave={() => setIsHover(false)} onClick={deleteTagFromTask}>\n      {isHover ? \"-\" : \"#\"}\n      {tag.name}\n    </h3>)\n}\n\nexport default Tag"]},"metadata":{},"sourceType":"module"}