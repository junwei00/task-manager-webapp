{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js\";\nimport Task from './Task';\nimport useState from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [reorderedTasks, setReorderedTasks] = useState([]);\n\nfunction reorderTasks() {\n  let flaggedTasks = [];\n  let doneTasks = [];\n  let otherTasks = [];\n  filteredTaskList.forEach(task => {\n    if (task.status === 'flagged') {\n      flaggedTasks.push(task);\n    } else if (task.status === 'done') {\n      doneTasks.push(task);\n    } else {\n      otherTasks.push(task);\n    }\n  });\n  setReorderedTasks(flaggedTasks.concat(otherTasks.concat(doneTasks)));\n}\n\nfunction Tasks(_ref) {\n  let {\n    setTaskList,\n    setFilteredTaskList,\n    filteredTaskList,\n    tagList,\n    getTags,\n    setTaggedTaskList\n  } = _ref;\n  reorderTasks();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasks\",\n    children: [\"[\", reorderedTasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        index: index,\n        setFilteredTaskList: setFilteredTaskList,\n        filteredTaskList: filteredTaskList,\n        task: task,\n        setTaskList: setTaskList,\n        tagList: tagList,\n        getTags: getTags,\n        setTaggedTaskList: setTaggedTaskList\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js"],"names":["Task","useState","reorderedTasks","setReorderedTasks","reorderTasks","flaggedTasks","doneTasks","otherTasks","filteredTaskList","forEach","task","status","push","concat","Tasks","setTaskList","setFilteredTaskList","tagList","getTags","setTaggedTaskList","map","index","id"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,OAArB;;AAEA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCF,QAAQ,CAAC,EAAD,CAApD;;AAEA,SAASG,YAAT,GAAwB;AACtB,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,UAAU,GAAG,EAAjB;AAEAC,EAAAA,gBAAgB,CAACC,OAAjB,CAAyBC,IAAI,IAAI;AAC/B,QAAIA,IAAI,CAACC,MAAL,KAAgB,SAApB,EAA+B;AAC7BN,MAAAA,YAAY,CAACO,IAAb,CAAkBF,IAAlB;AACD,KAFD,MAEO,IAAIA,IAAI,CAACC,MAAL,KAAgB,MAApB,EAA4B;AACjCL,MAAAA,SAAS,CAACM,IAAV,CAAeF,IAAf;AACD,KAFM,MAEA;AACLH,MAAAA,UAAU,CAACK,IAAX,CAAgBF,IAAhB;AACD;AACF,GARD;AASAP,EAAAA,iBAAiB,CAACE,YAAY,CAACQ,MAAb,CAAoBN,UAAU,CAACM,MAAX,CAAkBP,SAAlB,CAApB,CAAD,CAAjB;AACD;;AAED,SAASQ,KAAT,OAA4G;AAAA,MAA7F;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,mBAAf;AAAoCR,IAAAA,gBAApC;AAAsDS,IAAAA,OAAtD;AAA+DC,IAAAA,OAA/D;AAAwEC,IAAAA;AAAxE,GAA6F;AAC1Gf,EAAAA,YAAY;AACZ,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,oBACIF,cAAc,CAACkB,GAAf,CAAmB,CAACV,IAAD,EAAOW,KAAP,KAAiB;AACpC,0BAAO,QAAC,IAAD;AAAoB,QAAA,KAAK,EAAEA,KAA3B;AAAkC,QAAA,mBAAmB,EAAEL,mBAAvD;AACL,QAAA,gBAAgB,EAAER,gBADb;AAC+B,QAAA,IAAI,EAAEE,IADrC;AAC2C,QAAA,WAAW,EAAEK,WADxD;AAEL,QAAA,OAAO,EAAEE,OAFJ;AAEa,QAAA,OAAO,EAAEC,OAFtB;AAE+B,QAAA,iBAAiB,EAAEC;AAFlD,SAAWT,IAAI,CAACY,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AAGD,KAJC,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAXQR,K;AAaT,eAAeA,KAAf","sourcesContent":["import Task from './Task'\nimport useState from 'react'\n\nconst [reorderedTasks, setReorderedTasks] = useState([])\n\nfunction reorderTasks() {\n  let flaggedTasks = []\n  let doneTasks = []\n  let otherTasks = []\n\n  filteredTaskList.forEach(task => {\n    if (task.status === 'flagged') {\n      flaggedTasks.push(task)\n    } else if (task.status === 'done') {\n      doneTasks.push(task)\n    } else {\n      otherTasks.push(task)\n    }\n  })\n  setReorderedTasks(flaggedTasks.concat(otherTasks.concat(doneTasks)))\n}\n\nfunction Tasks({ setTaskList, setFilteredTaskList, filteredTaskList, tagList, getTags, setTaggedTaskList }) {\n  reorderTasks()\n  return (\n    <div className=\"Tasks\">\n      [{reorderedTasks.map((task, index) => {\n        return <Task key={task.id} index={index} setFilteredTaskList={setFilteredTaskList} \n          filteredTaskList={filteredTaskList} task={task} setTaskList={setTaskList}\n          tagList={tagList} getTags={getTags} setTaggedTaskList={setTaggedTaskList}/>\n      })}\n    </div>\n  );\n}\n\nexport default Tasks"]},"metadata":{},"sourceType":"module"}