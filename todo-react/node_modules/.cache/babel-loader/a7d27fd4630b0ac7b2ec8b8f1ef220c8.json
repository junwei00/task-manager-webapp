{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/cvwo-todo-app/todo-react/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction refreshTask() {\n  axios.get(`/api/tasks/${task.id}`).then(res => {\n    let newTaskList = [...filteredTaskList];\n    newTaskList[key] = res;\n    setFilteredTaskList(newTaskList);\n  }).catch(error => console.log(error));\n}\n\nfunction deleteTask() {\n  axios.delete(`/api/tasks/${task.id}`).then(res => {\n    getTasks();\n  }).catch(error => console.log(error));\n}\n\nfunction toggleFlagTask() {\n  let data = task.status == \"flagged\" ? {\n    status: null\n  } : {\n    status: \"flagged\"\n  };\n  axios.put(`/api/tasks/${task.id}`, data).then(res => {\n    refreshTask();\n  }).catch(error => console.log(error));\n}\n\nfunction toggleDoneTask() {\n  let data = task.status == \"done\" ? {\n    status: null\n  } : {\n    status: \"done\"\n  };\n  axios.put(`/api/tasks/${task.id}`, data).then(res => {\n    getTasks();\n  }).catch(error => console.log(error));\n}\n\nfunction Task(_ref) {\n  _s();\n\n  let {\n    key,\n    setFilteredTaskList,\n    filteredTaskList,\n    task,\n    getTasks\n  } = _ref;\n  const [showEditTask, setShowEditTask] = useState(false);\n  let className = \"Task\";\n\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\";\n  }\n\n  if (task.status == \"done\") {\n    className += \" Task-done\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Title\",\n      children: [task.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"Deadline\",\n      children: [\"Deadline: \", task.deadline]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleFlagTask,\n        children: task.status == 'flagged' ? 'Unflag' : 'Flag'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEditTask(!showEditTask),\n        children: showEditTask ? 'Close' : 'Edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDoneTask,\n        children: task.status == 'done' ? 'Undo' : 'Done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTask,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), showEditTask && /*#__PURE__*/_jsxDEV(EditTask, {\n      task: task,\n      getTasks: getTasks,\n      setShowEditTask: setShowEditTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"G3TJSRdPN5FfRCs5cU2/7k2zg90=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/oaeiu/cvwo-todo-app/todo-react/src/components/Task.js"],"names":["axios","useState","EditTask","refreshTask","get","task","id","then","res","newTaskList","filteredTaskList","key","setFilteredTaskList","catch","error","console","log","deleteTask","delete","getTasks","toggleFlagTask","data","status","put","toggleDoneTask","Task","showEditTask","setShowEditTask","className","title","deadline","description"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\n\nfunction refreshTask() {\n  axios\n    .get(`/api/tasks/${task.id}`)\n    .then((res) => {\n      let newTaskList = [...filteredTaskList]\n      newTaskList[key] = res\n      setFilteredTaskList(newTaskList)\n    })\n    .catch((error) => console.log(error))\n}\n\nfunction deleteTask() {\n  axios\n    .delete(`/api/tasks/${task.id}`)\n    .then((res) => {\n      getTasks()\n    })\n    .catch((error) => console.log(error))\n}\n\nfunction toggleFlagTask() {\n  let data = (task.status == \"flagged\")\n             ? {status: null}\n             : {status: \"flagged\"}\n  axios\n    .put(`/api/tasks/${task.id}`, data)\n    .then((res) => {\n      refreshTask()\n    })\n    .catch((error) => console.log(error))\n}\n\nfunction toggleDoneTask() {\n  let data = (task.status == \"done\")\n             ? {status: null}\n             : {status: \"done\"}\n  axios\n    .put(`/api/tasks/${task.id}`, data)\n    .then((res) => {\n      getTasks()\n    })\n    .catch((error) => console.log(error))    \n}\n\nfunction Task({ key, setFilteredTaskList, filteredTaskList, task, getTasks }) {\n  const [showEditTask, setShowEditTask] = useState(false)\n\n\n  let className=\"Task\"\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\"\n  }\n  if (task.status == \"done\") {\n    className += \" Task-done\"\n  }\n  \n  return (\n    <div className={className}>\n      <h3 className=\"Title\">{task.title} </h3>\n      <h4 className=\"Deadline\">Deadline: {task.deadline}</h4>\n      <p>{task.description}</p>\n      <div className=\"Buttons\">\n        <button onClick = {toggleFlagTask}>\n          {task.status == 'flagged' ? 'Unflag' : 'Flag'}\n        </button>\n        <button onClick = {() => setShowEditTask(!showEditTask)}>\n        {showEditTask ? 'Close' : 'Edit'}\n        </button>\n        <button onClick = {toggleDoneTask}>\n          {task.status == 'done' ? 'Undo' : 'Done'}\n        </button>\n        <button onClick = {deleteTask}>\n        Delete\n        </button>\n      </div>\n      {showEditTask && <EditTask task={task} getTasks={getTasks} setShowEditTask={setShowEditTask} />}\n    </div>\n  );\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}