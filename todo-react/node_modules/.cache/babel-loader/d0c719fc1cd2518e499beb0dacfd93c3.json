{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js\";\nimport Task from './Task';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  let {\n    setTaskList,\n    setFilteredTaskList,\n    filteredTaskList,\n    tagList,\n    getTags,\n    setTaggedTaskList\n  } = _ref;\n\n  function reorderTasks() {\n    const flaggedTasks = [];\n    const doneTasks = [];\n    const otherTasks = [];\n    filteredTaskList.forEach(task => {\n      if (task.status === 'flagged') {\n        flaggedTasks.push(task);\n      } else if (task.status === 'done') {\n        doneTasks.push(task);\n      } else {\n        otherTasks.push(task);\n      }\n    });\n    return flaggedTasks.concat(otherTasks.concat(doneTasks));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasks\",\n    children: [filteredTaskList.map((task, index) => {\n      if (!(task.status == \"done\")) {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          setFilteredTaskList: setFilteredTaskList,\n          filteredTaskList: filteredTaskList,\n          task: task,\n          setTaskList: setTaskList,\n          tagList: tagList,\n          getTags: getTags,\n          setTaggedTaskList: setTaggedTaskList\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this);\n      }\n    }), filteredTaskList.map((task, index) => {\n      if (task.status == \"done\") {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          setFilteredTaskList: setFilteredTaskList,\n          filteredTaskList: filteredTaskList,\n          task: task,\n          setTaskList: setTaskList,\n          tagList: tagList,\n          getTags: getTags,\n          setTaggedTaskList: setTaggedTaskList\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 18\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js"],"names":["Task","useState","Tasks","setTaskList","setFilteredTaskList","filteredTaskList","tagList","getTags","setTaggedTaskList","reorderTasks","flaggedTasks","doneTasks","otherTasks","forEach","task","status","push","concat","map","index","id"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,KAAT,OAA4G;AAAA,MAA7F;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,mBAAf;AAAoCC,IAAAA,gBAApC;AAAsDC,IAAAA,OAAtD;AAA+DC,IAAAA,OAA/D;AAAwEC,IAAAA;AAAxE,GAA6F;;AAG1G,WAASC,YAAT,GAAwB;AACtB,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,UAAU,GAAG,EAAnB;AAEAP,IAAAA,gBAAgB,CAACQ,OAAjB,CAAyBC,IAAI,IAAI;AAC/B,UAAIA,IAAI,CAACC,MAAL,KAAgB,SAApB,EAA+B;AAC7BL,QAAAA,YAAY,CAACM,IAAb,CAAkBF,IAAlB;AACD,OAFD,MAEO,IAAIA,IAAI,CAACC,MAAL,KAAgB,MAApB,EAA4B;AACjCJ,QAAAA,SAAS,CAACK,IAAV,CAAeF,IAAf;AACD,OAFM,MAEA;AACLF,QAAAA,UAAU,CAACI,IAAX,CAAgBF,IAAhB;AACD;AACF,KARD;AASA,WAAOJ,YAAY,CAACO,MAAb,CAAoBL,UAAU,CAACK,MAAX,CAAkBN,SAAlB,CAApB,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACGN,gBAAgB,CAACa,GAAjB,CAAqB,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AACrC,UAAI,EAAEL,IAAI,CAACC,MAAL,IAAe,MAAjB,CAAJ,EAA8B;AAC5B,4BAAO,QAAC,IAAD;AAAoB,UAAA,KAAK,EAAEI,KAA3B;AAAkC,UAAA,mBAAmB,EAAEf,mBAAvD;AACL,UAAA,gBAAgB,EAAEC,gBADb;AAC+B,UAAA,IAAI,EAAES,IADrC;AAC2C,UAAA,WAAW,EAAEX,WADxD;AAEL,UAAA,OAAO,EAAEG,OAFJ;AAEa,UAAA,OAAO,EAAEC,OAFtB;AAE+B,UAAA,iBAAiB,EAAEC;AAFlD,WAAWM,IAAI,CAACM,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGD;AACF,KANA,CADH,EAQGf,gBAAgB,CAACa,GAAjB,CAAqB,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AACrC,UAAIL,IAAI,CAACC,MAAL,IAAe,MAAnB,EAA2B;AACzB,4BAAO,QAAC,IAAD;AAAoB,UAAA,KAAK,EAAEI,KAA3B;AAAkC,UAAA,mBAAmB,EAAEf,mBAAvD;AACL,UAAA,gBAAgB,EAAEC,gBADb;AAC+B,UAAA,IAAI,EAAES,IADrC;AAC2C,UAAA,WAAW,EAAEX,WADxD;AAEL,UAAA,OAAO,EAAEG,OAFJ;AAEa,UAAA,OAAO,EAAEC,OAFtB;AAE+B,UAAA,iBAAiB,EAAEC;AAFlD,WAAWM,IAAI,CAACM,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGD;AACJ,KANE,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KAtCQlB,K;AAwCT,eAAeA,KAAf","sourcesContent":["import Task from './Task'\nimport { useState } from 'react'\n\nfunction Tasks({ setTaskList, setFilteredTaskList, filteredTaskList, tagList, getTags, setTaggedTaskList }) {\n\n\n  function reorderTasks() {\n    const flaggedTasks = []\n    const doneTasks = []\n    const otherTasks = []\n\n    filteredTaskList.forEach(task => {\n      if (task.status === 'flagged') {\n        flaggedTasks.push(task)\n      } else if (task.status === 'done') {\n        doneTasks.push(task)\n      } else {\n        otherTasks.push(task)\n      }\n    })\n    return flaggedTasks.concat(otherTasks.concat(doneTasks))\n  }\n\n  return (\n    <div className=\"Tasks\">\n      {filteredTaskList.map((task, index) => {\n        if (!(task.status == \"done\")) {\n          return <Task key={task.id} index={index} setFilteredTaskList={setFilteredTaskList} \n            filteredTaskList={filteredTaskList} task={task} setTaskList={setTaskList}\n            tagList={tagList} getTags={getTags} setTaggedTaskList={setTaggedTaskList}/>\n        }\n      })}\n      {filteredTaskList.map((task, index) => {\n        if (task.status == \"done\") {\n          return <Task key={task.id} index={index} setFilteredTaskList={setFilteredTaskList} \n            filteredTaskList={filteredTaskList} task={task} setTaskList={setTaskList}\n            tagList={tagList} getTags={getTags} setTaggedTaskList={setTaggedTaskList}/>\n        }\n    })}\n    </div>\n  );\n}\n\nexport default Tasks"]},"metadata":{},"sourceType":"module"}