{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport TagTask from \"./TagTask\";\nimport Tag from \"./Tag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(_ref) {\n  _s();\n\n  var _this = this;\n\n  let {\n    currentUserId,\n    index,\n    task,\n    setFilteredTaskList,\n    filteredTaskList,\n    setTaggedTaskList,\n    setTaskList,\n    tagList,\n    getUserTags,\n    refreshTask\n  } = _ref;\n  return function (refreshTask) {\n    const [showEditTask, setShowEditTask] = useState(false);\n    const [showTagTask, setShowTagTask] = useState(false);\n\n    function refreshTask() {\n      axios.get(`/api/tasks/${task.id}`).then(res => {\n        let newTaskList = [...filteredTaskList];\n        newTaskList[index] = res.data;\n        setFilteredTaskList(newTaskList);\n        setTaggedTaskList(newTaskList);\n        refreshTasklist();\n        getUserTags();\n      }).catch(error => console.log(error));\n    }\n\n    function refreshTasklist() {\n      axios.get(`/api/${currentUserId}/tasks`).then(res => {\n        setTaskList(res.data);\n      }).catch(error => console.log(error));\n    }\n\n    function refreshDeletedTask() {\n      let newTaskList = [...filteredTaskList];\n      newTaskList.splice(index, 1);\n      setFilteredTaskList(newTaskList);\n      setTaggedTaskList(newTaskList);\n      refreshTasklist();\n      getUserTags();\n    }\n\n    function refreshTaskStatus(newstatus) {\n      let newTaskList = [...filteredTaskList];\n      newTaskList[index].status = newstatus;\n      setFilteredTaskList(newTaskList);\n      setTaggedTaskList(newTaskList);\n      refreshTasklist();\n      getUserTags();\n    }\n\n    function refreshTaskTags(newtag) {\n      let newTaskList = [...filteredTaskList];\n      newTaskList[index].tags.push(newtag);\n      setFilteredTaskList(newTaskList);\n      setTaggedTaskList(newTaskList);\n      refreshTasklist();\n      getUserTags();\n    }\n\n    function refreshDeletedTaskTag(tagindex) {\n      let newTaskList = [...filteredTaskList];\n      newTaskList[index].tags.splice(tagindex, 1);\n      setFilteredTaskList(newTaskList);\n      setTaggedTaskList(newTaskList);\n      refreshTasklist();\n      getUserTags();\n    }\n\n    function deleteTask() {\n      axios.delete(`/api/tasks/${task.id}`).then(res => {\n        refreshDeletedTask();\n      }).catch(error => console.log(error));\n    }\n\n    function toggleFlagTask() {\n      let newstatus = task.status == \"flagged\" ? null : 'flagged';\n      axios.put(`/api/tasks/${task.id}`, {\n        status: newstatus\n      }).then(res => {\n        task.status = newstatus;\n        refreshTask(task);\n      }).catch(error => console.log(error));\n    }\n\n    function toggleDoneTask() {\n      let newstatus = task.status == \"done\" ? null : 'done';\n      axios.put(`/api/tasks/${task.id}`, {\n        status: newstatus\n      }).then(res => {\n        refreshTaskStatus(newstatus);\n      }).catch(error => console.log(error));\n    }\n\n    let className = \"Task\";\n\n    if (task.status == \"flagged\") {\n      className += \" Task-flagged\";\n    }\n\n    if (task.status == \"done\") {\n      className += \" Task-done\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Title\",\n          children: [task.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TagsBar\",\n          children: task.tags.map((tag, index) => {\n            return /*#__PURE__*/_jsxDEV(Tag, {\n              index: index,\n              tag: tag,\n              refreshDeletedTaskTag: refreshDeletedTaskTag,\n              task: task\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 10\n        }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"AddTagToTask\",\n          onClick: () => setShowTagTask(!showTagTask),\n          children: showTagTask ? \"-\" : \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 10\n        }, _this), showTagTask && /*#__PURE__*/_jsxDEV(TagTask, {\n          task: task,\n          tagList: tagList,\n          refreshTaskTags: refreshTaskTags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 26\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"Deadline\",\n        children: [\"Deadline: \", task.deadline === null ? \"None\" : task.deadline]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDoneTask,\n          children: task.status == 'done' ? 'Undo' : 'Done'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleFlagTask,\n          children: task.status == 'flagged' ? 'Unflag' : 'Flag'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowEditTask(!showEditTask),\n          children: showEditTask ? 'Close' : 'Edit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteTask,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, _this), showEditTask && /*#__PURE__*/_jsxDEV(EditTask, {\n        task: task,\n        index: index,\n        refreshTask: () => refreshTask(),\n        setShowEditTask: setShowEditTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 24\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, _this);\n  }(refreshTask);\n}\n\n_s(Task, \"E6O+kNljy8TJBkmOI/QdaoyKiZw=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Task.js"],"names":["axios","useState","EditTask","TagTask","Tag","Task","currentUserId","index","task","setFilteredTaskList","filteredTaskList","setTaggedTaskList","setTaskList","tagList","getUserTags","refreshTask","showEditTask","setShowEditTask","showTagTask","setShowTagTask","get","id","then","res","newTaskList","data","refreshTasklist","catch","error","console","log","refreshDeletedTask","splice","refreshTaskStatus","newstatus","status","refreshTaskTags","newtag","tags","push","refreshDeletedTaskTag","tagindex","deleteTask","delete","toggleFlagTask","put","toggleDoneTask","className","title","map","tag","deadline","description"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport TagTask from \"./TagTask\";\nimport Tag from \"./Tag\"\n\nfunction Task({ currentUserId, index, task,  setFilteredTaskList, filteredTaskList, setTaggedTaskList, setTaskList, tagList, getUserTags, refreshTask}) {\n  const [showEditTask, setShowEditTask] = useState(false)\n  const [showTagTask, setShowTagTask] = useState(false)\n\n  function refreshTask() {\n    axios\n      .get(`/api/tasks/${task.id}`)\n      .then((res) => {\n        let newTaskList = [...filteredTaskList]\n        newTaskList[index] = res.data\n        setFilteredTaskList(newTaskList)\n        setTaggedTaskList(newTaskList)\n        refreshTasklist()\n        getUserTags()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function refreshTasklist() {\n    axios\n      .get(`/api/${currentUserId}/tasks`)\n      .then((res) => {\n        setTaskList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function refreshDeletedTask() {\n    let newTaskList = [...filteredTaskList]\n    newTaskList.splice(index, 1)\n    setFilteredTaskList(newTaskList)\n    setTaggedTaskList(newTaskList)\n    refreshTasklist()\n    getUserTags()\n  }\n\n  function refreshTaskStatus(newstatus) {\n    let newTaskList = [...filteredTaskList]\n    newTaskList[index].status = newstatus\n    setFilteredTaskList(newTaskList)\n    setTaggedTaskList(newTaskList)\n    refreshTasklist()\n    getUserTags()\n  }\n\n  function refreshTaskTags(newtag) {\n    let newTaskList = [...filteredTaskList]\n    newTaskList[index].tags.push(newtag)\n    setFilteredTaskList(newTaskList)\n    setTaggedTaskList(newTaskList)\n    refreshTasklist()\n    getUserTags()\n  }\n\n  function refreshDeletedTaskTag(tagindex) {\n    let newTaskList = [...filteredTaskList]\n    newTaskList[index].tags.splice(tagindex, 1)\n    setFilteredTaskList(newTaskList)\n    setTaggedTaskList(newTaskList)\n    refreshTasklist()\n    getUserTags()\n  }\n\n  function deleteTask() {\n    axios\n      .delete(`/api/tasks/${task.id}`)\n      .then((res) => {\n        refreshDeletedTask()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleFlagTask() {\n    let newstatus = (task.status == \"flagged\")\n               ? null\n               : 'flagged'\n    axios\n      .put(`/api/tasks/${task.id}`, {status: newstatus})\n      .then((res) => {\n        task.status = newstatus\n        refreshTask(task)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleDoneTask() {\n    let newstatus = (task.status == \"done\")\n               ? null\n               : 'done'\n    axios\n      .put(`/api/tasks/${task.id}`, {status: newstatus})\n      .then((res) => {\n        refreshTaskStatus(newstatus)\n      })\n      .catch((error) => console.log(error))    \n  }\n\n  let className=\"Task\"\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\"\n  }\n  if (task.status == \"done\") {\n    className += \" Task-done\"\n  }\n\n  return (\n    <div className={className}>\n      <div className=\"Header\">\n         <h3 className=\"Title\">{task.title} </h3>\n         <div className=\"TagsBar\">\n            {task.tags.map((tag, index) => {\n             return <Tag key={index} index={index} tag={tag} refreshDeletedTaskTag={refreshDeletedTaskTag} task={task}/>\n          })} \n         </div>\n         <h3 className=\"AddTagToTask\" onClick={() => setShowTagTask(!showTagTask)}>{showTagTask ? \"-\" : \"+\"}</h3>\n         {showTagTask && <TagTask task={task} tagList={tagList} refreshTaskTags={refreshTaskTags}/>}\n      </div>\n      <h4 className=\"Deadline\">Deadline: {task.deadline === null ? \"None\" : task.deadline}</h4>\n      <p>{task.description}</p>\n      <div className=\"Buttons\">\n        <button onClick = {toggleDoneTask}>\n          {task.status == 'done' ? 'Undo' : 'Done'}\n        </button>\n        <button onClick = {toggleFlagTask}>\n          {task.status == 'flagged' ? 'Unflag' : 'Flag'}\n        </button>\n        <button onClick = {() => setShowEditTask(!showEditTask)}>\n        {showEditTask ? 'Close' : 'Edit'}\n        </button>\n        <button onClick = {deleteTask}>\n        Delete\n        </button>\n      </div>\n      {showEditTask && <EditTask task={task} index={index} refreshTask={() => refreshTask()} \n        setShowEditTask={setShowEditTask} />}\n    </div>\n  );\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}