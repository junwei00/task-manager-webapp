{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js\";\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet remainingTasks = [];\n\nfunction Tasks(_ref) {\n  let {\n    setTaskList,\n    setFilteredTaskList,\n    filteredTaskList,\n    tagList,\n    getTags,\n    setTaggedTaskList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasks\",\n    children: [filteredTaskList.map((task, index) => {\n      if (!(task.status == \"done\")) {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          setFilteredTaskList: setFilteredTaskList,\n          filteredTaskList: filteredTaskList,\n          task: task,\n          setTaskList: setTaskList,\n          tagList: tagList,\n          getTags: getTags,\n          setTaggedTaskList: setTaggedTaskList\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 18\n        }, this);\n      }\n    }), filteredTaskList.map((task, index) => {\n      let thisTask = /*#__PURE__*/_jsxDEV(Task, {\n        index: index,\n        setFilteredTaskList: setFilteredTaskList,\n        filteredTaskList: filteredTaskList,\n        task: task,\n        setTaskList: setTaskList,\n        tagList: tagList,\n        getTags: getTags,\n        setTaggedTaskList: setTaggedTaskList\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this);\n\n      if (task.status == \"done\") {\n        return thisTask;\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js"],"names":["Task","remainingTasks","Tasks","setTaskList","setFilteredTaskList","filteredTaskList","tagList","getTags","setTaggedTaskList","map","task","index","status","id","thisTask"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;;AAEA,IAAIC,cAAc,GAAG,EAArB;;AAEA,SAASC,KAAT,OAA4G;AAAA,MAA7F;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,mBAAf;AAAoCC,IAAAA,gBAApC;AAAsDC,IAAAA,OAAtD;AAA+DC,IAAAA,OAA/D;AAAwEC,IAAAA;AAAxE,GAA6F;AAC1G,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACGH,gBAAgB,CAACI,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,UAAI,EAAED,IAAI,CAACE,MAAL,IAAe,MAAjB,CAAJ,EAA8B;AAC5B,4BAAO,QAAC,IAAD;AAAoB,UAAA,KAAK,EAAED,KAA3B;AAAkC,UAAA,mBAAmB,EAAEP,mBAAvD;AACP,UAAA,gBAAgB,EAAEC,gBADX;AAC6B,UAAA,IAAI,EAAEK,IADnC;AACyC,UAAA,WAAW,EAAEP,WADtD;AAEP,UAAA,OAAO,EAAEG,OAFF;AAEW,UAAA,OAAO,EAAEC,OAFpB;AAE6B,UAAA,iBAAiB,EAAEC;AAFhD,WAAWE,IAAI,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGD;AACF,KANA,CADH,EAQGR,gBAAgB,CAACI,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,UAAIG,QAAQ,gBAAG,QAAC,IAAD;AAAoB,QAAA,KAAK,EAAEH,KAA3B;AAAkC,QAAA,mBAAmB,EAAEP,mBAAvD;AACC,QAAA,gBAAgB,EAAEC,gBADnB;AACqC,QAAA,IAAI,EAAEK,IAD3C;AACiD,QAAA,WAAW,EAAEP,WAD9D;AAEC,QAAA,OAAO,EAAEG,OAFV;AAEmB,QAAA,OAAO,EAAEC,OAF5B;AAEqC,QAAA,iBAAiB,EAAEC;AAFxD,SAAWE,IAAI,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAf;;AAGA,UAAIH,IAAI,CAACE,MAAL,IAAe,MAAnB,EAA2B;AACzB,eAAOE,QAAP;AACD;AACF,KAPA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;KApBQZ,K;AAsBT,eAAeA,KAAf","sourcesContent":["import Task from './Task'\n\nlet remainingTasks = []\n\nfunction Tasks({ setTaskList, setFilteredTaskList, filteredTaskList, tagList, getTags, setTaggedTaskList }) {\n  return (\n    <div className=\"Tasks\">\n      {filteredTaskList.map((task, index) => {\n        if (!(task.status == \"done\")) {\n          return <Task key={task.id} index={index} setFilteredTaskList={setFilteredTaskList} \n          filteredTaskList={filteredTaskList} task={task} setTaskList={setTaskList}\n          tagList={tagList} getTags={getTags} setTaggedTaskList={setTaggedTaskList}/>\n        }\n      })}\n      {filteredTaskList.map((task, index) => {\n        let thisTask = <Task key={task.id} index={index} setFilteredTaskList={setFilteredTaskList} \n                        filteredTaskList={filteredTaskList} task={task} setTaskList={setTaskList}\n                        tagList={tagList} getTags={getTags} setTaggedTaskList={setTaggedTaskList}/>\n        if (task.status == \"done\") {\n          return thisTask\n        }\n      })}\n    </div>\n  );\n}\n\nexport default Tasks"]},"metadata":{},"sourceType":"module"}