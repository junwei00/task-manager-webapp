{"ast":null,"code":"import _slicedToArray from\"/home/oaeiu/cvwo-todo-app/todo-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NewTask(_ref){var setShowNewTask=_ref.setShowNewTask,getTasks=_ref.getTasks;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),deadline=_useState6[0],setDeadline=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),formValid=_useState8[0],setFormValid=_useState8[1];function handleSubmit(e){if(title==''||description==''||deadline==''){alert(\"Fields cannot be empty\");return;}else{postTask();}}function postTask(){axios.post(\"/api/tasks\",{title:title,description:description,deadline:deadline}).then(function(res){setTitle('');setDescription('');setDeadline(new Date());setShowNewTask(false);getTasks();}).catch(function(error){return console.log(error);});}function validateForm(){if(title==''||description==''||deadline==''){setFormValid(false);}else{setFormValid(true);}}return/*#__PURE__*/_jsxs(\"form\",{className:\"NewTask\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Title\",value:title,onChange:function onChange(e){validateForm();setTitle(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"Description\",type:\"text\",placeholder:\"Description\",value:description,onChange:function onChange(e){validateForm();setDescription(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",placeholder:\"Deadline\",value:deadline,onChange:function onChange(e){validateForm();setDeadline(e.target.value);}})}),/*#__PURE__*/_jsx(\"input\",{disabled:!formValid,className:\"Submit\",type:\"submit\",value:\"Save Task\"})]});}export default NewTask;","map":{"version":3,"sources":["/home/oaeiu/cvwo-todo-app/todo-react/src/components/NewTask.js"],"names":["axios","useState","NewTask","setShowNewTask","getTasks","title","setTitle","description","setDescription","deadline","setDeadline","formValid","setFormValid","handleSubmit","e","alert","postTask","post","then","res","Date","catch","error","console","log","validateForm","target","value"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,QAASC,CAAAA,OAAT,MAA+C,IAA5BC,CAAAA,cAA4B,MAA5BA,cAA4B,CAAZC,QAAY,MAAZA,QAAY,CAC7C,cAA0BH,QAAQ,CAAC,EAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eACA,eAAsCL,QAAQ,CAAC,EAAD,CAA9C,yCAAOM,WAAP,eAAoBC,cAApB,eACA,eAAgCP,QAAQ,CAAC,EAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAAkCT,QAAQ,CAAC,KAAD,CAA1C,yCAAOU,SAAP,eAAkBC,YAAlB,eAEA,QAASC,CAAAA,YAAT,CAAuBC,CAAvB,CAA0B,CACxB,GAAIT,KAAK,EAAI,EAAT,EAAeE,WAAW,EAAI,EAA9B,EAAoCE,QAAQ,EAAI,EAApD,CAAwD,CACtDM,KAAK,CAAC,wBAAD,CAAL,CACA,OACD,CAHD,IAGO,CACLC,QAAQ,GACT,CACF,CAED,QAASA,CAAAA,QAAT,EAAoB,CAClBhB,KAAK,CACFiB,IADH,CACQ,YADR,CACsB,CAClBZ,KAAK,CAAEA,KADW,CAElBE,WAAW,CAAEA,WAFK,CAGlBE,QAAQ,CAAEA,QAHQ,CADtB,EAMGS,IANH,CAMQ,SAACC,GAAD,CAAS,CACbb,QAAQ,CAAC,EAAD,CAAR,CACAE,cAAc,CAAC,EAAD,CAAd,CACAE,WAAW,CAAC,GAAIU,CAAAA,IAAJ,EAAD,CAAX,CACAjB,cAAc,CAAC,KAAD,CAAd,CACAC,QAAQ,GACT,CAZH,EAaGiB,KAbH,CAaS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EAbT,EAcD,CAED,QAASG,CAAAA,YAAT,EAAwB,CACtB,GAAIpB,KAAK,EAAI,EAAT,EAAeE,WAAW,EAAI,EAA9B,EAAoCE,QAAQ,EAAI,EAApD,CAAwD,CACtDG,YAAY,CAAC,KAAD,CAAZ,CACD,CAFD,IAEO,CACLA,YAAY,CAAC,IAAD,CAAZ,CACD,CACF,CAED,mBACE,cAAM,SAAS,CAAC,SAAhB,CAA0B,QAAQ,CAAEC,YAApC,wBACE,kCACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,OAFd,CAGE,KAAK,CAAER,KAHT,CAIE,QAAQ,CAAE,kBAACS,CAAD,CAAO,CACfW,YAAY,GACZnB,QAAQ,CAACQ,CAAC,CAACY,MAAF,CAASC,KAAV,CAAR,CAAyB,CAN7B,EADF,EADF,cAWE,kCACE,cACE,SAAS,CAAC,aADZ,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,aAHd,CAIE,KAAK,CAAEpB,WAJT,CAKE,QAAQ,CAAE,kBAACO,CAAD,CAAO,CACfW,YAAY,GACZjB,cAAc,CAACM,CAAC,CAACY,MAAF,CAASC,KAAV,CAAd,CAA+B,CAPnC,EADF,EAXF,cAsBE,kCACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,UAFd,CAGE,KAAK,CAAElB,QAHT,CAIE,QAAQ,CAAE,kBAACK,CAAD,CAAO,CACfW,YAAY,GACZf,WAAW,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV,CAAX,CAA4B,CANhC,EADF,EAtBF,cAgCE,cAAO,QAAQ,CAAE,CAAChB,SAAlB,CAA6B,SAAS,CAAC,QAAvC,CAAgD,IAAI,CAAC,QAArD,CAA8D,KAAK,CAAC,WAApE,EAhCF,GADF,CAoCD,CAED,cAAeT,CAAAA,OAAf","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction NewTask({ setShowNewTask, getTasks }) {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [deadline, setDeadline] = useState('')\n  const [formValid, setFormValid] = useState(false)\n\n  function handleSubmit (e) {\n    if (title == '' || description == '' || deadline == '') {\n      alert(\"Fields cannot be empty\")\n      return;\n    } else {\n      postTask()\n    }\n  }\n\n  function postTask() {\n    axios\n      .post(\"/api/tasks\", {\n        title: title,\n        description: description,\n        deadline: deadline\n      })\n      .then((res) => {\n        setTitle('')\n        setDescription('')\n        setDeadline(new Date())\n        setShowNewTask(false)\n        getTasks()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function validateForm() {\n    if (title == '' || description == '' || deadline == '') {\n      setFormValid(false)\n    } else {\n      setFormValid(true)\n    }\n  }\n\n  return (\n    <form className=\"NewTask\" onSubmit={handleSubmit}>\n      <div>\n        <input\n          type='text'\n          placeholder='Title'\n          value={title}\n          onChange={(e) => {\n            validateForm()\n            setTitle(e.target.value)}}\n        />\n      </div>\n      <div>\n        <input\n          className=\"Description\"\n          type='text'\n          placeholder='Description'\n          value={description}\n          onChange={(e) => {\n            validateForm()\n            setDescription(e.target.value)}}\n        />\n      </div>\n      <div>\n        <input\n          type='date'\n          placeholder='Deadline'\n          value={deadline}\n          onChange={(e) => {\n            validateForm()\n            setDeadline(e.target.value)}}\n        />\n      </div>\n      <input disabled={!formValid} className=\"Submit\" type='submit' value='Save Task'/>\n    </form>\n  );\n}\n\nexport default NewTask"]},"metadata":{},"sourceType":"module"}