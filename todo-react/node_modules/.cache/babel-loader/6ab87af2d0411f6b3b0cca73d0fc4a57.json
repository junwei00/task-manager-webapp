{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(_ref) {\n  _s();\n\n  let {\n    tagList,\n    getTags,\n    filterTasksByTag,\n    setFilteredTaskList,\n    taskList\n  } = _ref;\n  const [showNewtag, setShowNewtag] = useState(false);\n  const [showEdittag, setShowEdittag] = useState(false);\n  const [newtagName, setNewtagName] = useState(\"\");\n  const [currentTag, setCurrentTag] = useState(0);\n\n  function Newtag() {\n    if (showEdittag && !showNewtag) {\n      setShowEdittag(false);\n    }\n\n    setShowNewtag(!showNewtag);\n  }\n\n  function Edittag() {\n    if (!showEdittag && showNewtag) {\n      setShowNewtag(false);\n    }\n\n    setShowEdittag(!showEdittag);\n  }\n\n  function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      postTag();\n    }\n  }\n\n  function postTag() {\n    axios.post(\"/api/tags\", {\n      name: newtagName\n    }).then(res => {\n      setShowNewtag(false);\n      getTags();\n    }).catch(error => console.log(error));\n  }\n\n  function deleteTag(id) {\n    axios.delete(`/api/tags/${id}`).then(res => {\n      getTags();\n    }).catch(error => console.log(error));\n  }\n\n  const newtagInput = /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"NewtagInput\",\n    onKeyDown: handleKeyDown,\n    onChange: e => setNewtagName(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tag\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setFilteredTaskList(taskList),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"Number\",\n        children: taskList.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), tagList.map((tag, index) => {\n      let className = \"Tag\";\n\n      if (tag.id == currentTag) {\n        className += \" Tag-selected\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => {\n            filterTasksByTag(tag.id);\n          },\n          children: tag.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), showEdittag ? /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"Cross\",\n          onClick: () => deleteTag(tag.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"Number\",\n          children: tag.tasks.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewEdit\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"Newtag\",\n        onClick: Newtag,\n        children: showNewtag ? \"Close\" : \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"Edittag\",\n        onClick: Edittag,\n        children: showEdittag ? \"Close\" : \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), showNewtag ? newtagInput : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidebar, \"tM8JZBEKa5gOAbhp0nsWmpp2axc=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Sidebar.js"],"names":["useState","useEffect","axios","Sidebar","tagList","getTags","filterTasksByTag","setFilteredTaskList","taskList","showNewtag","setShowNewtag","showEdittag","setShowEdittag","newtagName","setNewtagName","currentTag","setCurrentTag","Newtag","Edittag","handleKeyDown","e","key","postTag","post","name","then","res","catch","error","console","log","deleteTag","id","delete","newtagInput","target","value","length","map","tag","index","className","tasks"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from \"axios\"\n\nfunction Sidebar({ tagList, getTags, filterTasksByTag, setFilteredTaskList, taskList }) {\n\n  const [showNewtag, setShowNewtag] = useState(false)\n  const [showEdittag, setShowEdittag] = useState(false)\n  const [newtagName, setNewtagName] = useState(\"\")\n  const [currentTag, setCurrentTag] = useState(0)\n\n  function Newtag() {\n    if (showEdittag && !showNewtag) {\n      setShowEdittag(false)\n    }\n    setShowNewtag(!showNewtag)  \n  }\n\n  function Edittag() {\n    if (!showEdittag && showNewtag) {\n      setShowNewtag(false)\n    }\n    setShowEdittag(!showEdittag)\n  }\n\n  function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      postTag()\n    }\n  }\n\n  function postTag() {\n    axios\n      .post(\"/api/tags\", {\n        name: newtagName\n      })\n      .then((res) => {\n        setShowNewtag(false)\n        getTags()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function deleteTag(id) {\n    axios\n      .delete(`/api/tags/${id}`)\n      .then((res) => {\n        getTags()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  const newtagInput = \n    <input \n      className=\"NewtagInput\" \n      onKeyDown={handleKeyDown}\n      onChange={(e) => setNewtagName(e.target.value)}\n    />\n\n  return (\n    <div className='Sidebar'>\n      <div className=\"Tag\">\n        <a onClick={() => setFilteredTaskList(taskList)}>\n          All\n        </a>\n        <a className='Number'>\n          {taskList.length}\n        </a>\n      </div>\n      {tagList.map((tag, index) => {\n        let className=\"Tag\"\n        if (tag.id == currentTag) {\n          className+=\" Tag-selected\"\n        }\n        return (\n        <div key={index} className={className}>\n          <a onClick={() => {filterTasksByTag(tag.id)}}>\n            {tag.name}\n          </a>\n          {showEdittag \n            ? <a className=\"Cross\" onClick={() => deleteTag(tag.id)}>\n                X\n              </a> \n            : <a className=\"Number\">{tag.tasks.length}</a>}\n        </div>)\n      })}\n      <div className=\"NewEdit\">\n      <a className=\"Newtag\" onClick={Newtag} >\n        {showNewtag ? \"Close\" : \"New\"}\n      </a>\n      <a className=\"Edittag\" onClick={Edittag} >\n        {showEdittag ? \"Close\" : \"Edit\"}\n      </a>\n      </div>\n      {showNewtag ? newtagInput : \"\"}\n    </div>\n  );\n}\n\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}