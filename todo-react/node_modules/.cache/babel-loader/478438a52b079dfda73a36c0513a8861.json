{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport Task from './Task';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(_ref) {\n  _s();\n\n  let {\n    filteredTaskList,\n    tagList,\n    getUserTags,\n    refreshTask,\n    refreshDeletedTask\n  } = _ref;\n  [renderTaskList, setRenderTaskList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasks\",\n    children: [filteredTaskList.map((task, index) => {\n      if (task.status !== \"done\") {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          task: task,\n          tagList: tagList,\n          getUserTags: getUserTags,\n          refreshTaskNew: refreshTask,\n          refreshDeletedTaskNew: refreshDeletedTask\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this);\n      }\n    }), filteredTaskList.map((task, index) => {\n      if (task.status === \"done\") {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          task: task,\n          tagList: tagList,\n          getUserTags: getUserTags,\n          refreshTaskNew: refreshTask,\n          refreshDeletedTaskNew: refreshDeletedTask\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tasks, \"4bWmwqNpSmwrWYwBxf0uO8LDcFo=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Tasks.js"],"names":["Task","useState","useEffect","Tasks","filteredTaskList","tagList","getUserTags","refreshTask","refreshDeletedTask","renderTaskList","setRenderTaskList","map","task","index","status","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,KAAT,OAA4F;AAAA;;AAAA,MAA7E;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,WAA7B;AAA0CC,IAAAA,WAA1C;AAAuDC,IAAAA;AAAvD,GAA6E;AAC1F,GAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACGG,gBAAgB,CAACO,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,UAAID,IAAI,CAACE,MAAL,KAAgB,MAApB,EAA4B;AAC1B,4BACE,QAAC,IAAD;AAEE,UAAA,KAAK,EAAED,KAFT;AAGE,UAAA,IAAI,EAAED,IAHR;AAIE,UAAA,OAAO,EAAEP,OAJX;AAKE,UAAA,WAAW,EAAEC,WALf;AAME,UAAA,cAAc,EAAEC,WANlB;AAOE,UAAA,qBAAqB,EAAEC;AAPzB,WACOI,IAAI,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AASD;AACF,KAZA,CADH,EAcGX,gBAAgB,CAACO,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,UAAID,IAAI,CAACE,MAAL,KAAgB,MAApB,EAA4B;AAC1B,4BACE,QAAC,IAAD;AAEE,UAAA,KAAK,EAAED,KAFT;AAGE,UAAA,IAAI,EAAED,IAHR;AAIE,UAAA,OAAO,EAAEP,OAJX;AAKE,UAAA,WAAW,EAAEC,WALf;AAME,UAAA,cAAc,EAAEC,WANlB;AAOE,UAAA,qBAAqB,EAAEC;AAPzB,WACOI,IAAI,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AASD;AACJ,KAZE,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAjCQZ,K;;KAAAA,K;AAmCT,eAAeA,KAAf","sourcesContent":["import Task from './Task'\nimport { useState, useEffect } from 'react'\n\nfunction Tasks({ filteredTaskList, tagList, getUserTags, refreshTask, refreshDeletedTask }) {\n  [renderTaskList, setRenderTaskList] = useState([])\n\n  return (\n    <div className=\"Tasks\">\n      {filteredTaskList.map((task, index) => {\n        if (task.status !== \"done\") {\n          return (\n            <Task \n              key={task.id} \n              index={index} \n              task={task} \n              tagList={tagList} \n              getUserTags={getUserTags}  \n              refreshTaskNew={refreshTask}\n              refreshDeletedTaskNew={refreshDeletedTask} />)\n        }\n      })}\n      {filteredTaskList.map((task, index) => {\n        if (task.status === \"done\") {\n          return (\n            <Task \n              key={task.id} \n              index={index} \n              task={task} \n              tagList={tagList} \n              getUserTags={getUserTags}  \n              refreshTaskNew={refreshTask}\n              refreshDeletedTaskNew={refreshDeletedTask} />)\n        }\n    })}\n    </div>\n  );\n}\n\nexport default Tasks"]},"metadata":{},"sourceType":"module"}