{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport Tasks from './components/Tasks';\nimport Topbar from './components/Topbar';\nimport Sidebar from './components/Sidebar';\nimport NewTask from './components/NewTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showNewTask, setShowNewTask] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  const [taggedTaskList, setTaggedTaskList] = useState([]);\n  const [filteredTaskList, setFilteredTaskList] = useState([]);\n  const [tagList, setTagList] = useState([]);\n  const [currentSort, setCurrentSort] = useState('Created');\n\n  function getTasks() {\n    axios.get(\"/api/tasks\").then(res => {\n      setTaskList(res.data);\n      setFilteredTaskList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function getTasksByTag(id) {\n    axios.get(`/api/tags/${id}/tasks`).then(res => {\n      setFilteredTaskList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function filterTasksByTag(id) {\n    let result = [];\n    result = taskList.filter(task => {\n      let tags = task.tags.map(tag => {\n        return tag.id;\n      });\n      return tags.includes(id);\n    });\n    setTaggedTaskList(result);\n    setFilteredTaskList(result);\n    handleSort('Current');\n  }\n\n  function getTags() {\n    axios.get(\"/api/tags\").then(res => {\n      setTagList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function handleSearch(e) {\n    let searchTerm = e.target.value.toLowerCase();\n    let result = [];\n    result = taggedTaskList.filter(task => task.title.toLowerCase().search(searchTerm) != -1);\n    setFilteredTaskList(result);\n  }\n\n  function handleSort(sortBy) {\n    if (sortBy === 'Current') {\n      sortBy = currentSort;\n    } else {\n      setCurrentSort(sortBy);\n    }\n\n    let result = [...filteredTaskList];\n\n    if (sortBy == \"Created\") {\n      result.sort((task1, task2) => {\n        if (task1.created_at > task2.created_at) return -1;\n        if (task2.created_at > task1.created_at) return 1;\n        return 0;\n      });\n    } else if (sortBy == \"Edited\") {\n      result.sort((task1, task2) => {\n        if (task1.updated_at > task2.updated_at) return -1;\n        if (task2.updated_at > task1.updated_at) return 1;\n        return 0;\n      });\n    } else if (sortBy == \"Deadline\") {\n      result.sort((task1, task2) => {\n        if (task1.deadline === null) return 1;\n        if (task2.deadline === null) return -1;\n        if (task1.deadline > task2.deadline) return 1;\n        if (task2.deadline > task1.deadline) return -1;\n        return 0;\n      });\n    } else if (sortBy == \"Alphanumeric\") {\n      result.sort((task1, task2) => task1.title.localeCompare(task2.title));\n    } else {\n      console.log(\"Error: Unknown sorting case:\" + sortBy);\n    }\n\n    setFilteredTaskList(result);\n  }\n\n  useEffect(() => {\n    getTasks();\n    getTags();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      tagList: tagList,\n      getTags: getTags,\n      filterTasksByTag: filterTasksByTag,\n      setFilteredTaskList: setFilteredTaskList,\n      taskList: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {\n        handleSearch: handleSearch,\n        handleSort: handleSort,\n        buttonState: showNewTask,\n        onClickNewTask: () => setShowNewTask(!showNewTask)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), showNewTask && /*#__PURE__*/_jsxDEV(NewTask, {\n        setShowNewTask: setShowNewTask,\n        getTasks: getTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        setTaskList: setTaskList,\n        setFilteredTaskList: setFilteredTaskList,\n        tagList: tagList,\n        filteredTaskList: filteredTaskList,\n        getTags: () => getTags(),\n        setTaggedTaskList: setTaggedTaskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6zUWdZ3glo8Mnzhatj8x3wCJvEo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/App.js"],"names":["useState","useEffect","axios","Tasks","Topbar","Sidebar","NewTask","App","showNewTask","setShowNewTask","taskList","setTaskList","taggedTaskList","setTaggedTaskList","filteredTaskList","setFilteredTaskList","tagList","setTagList","currentSort","setCurrentSort","getTasks","get","then","res","data","catch","error","console","log","getTasksByTag","id","filterTasksByTag","result","filter","task","tags","map","tag","includes","handleSort","getTags","handleSearch","e","searchTerm","target","value","toLowerCase","title","search","sortBy","sort","task1","task2","created_at","updated_at","deadline","localeCompare"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.css'\nimport axios from \"axios\"\nimport Tasks from './components/Tasks'\nimport Topbar from './components/Topbar'\nimport Sidebar from './components/Sidebar'\nimport NewTask from './components/NewTask'\n\nfunction App() {\n  const [showNewTask, setShowNewTask] = useState(false)\n  const [taskList, setTaskList] = useState([])\n  const [taggedTaskList, setTaggedTaskList] = useState([])\n  const [filteredTaskList, setFilteredTaskList] = useState([])\n  const [tagList, setTagList] = useState([])\n  const [currentSort, setCurrentSort] = useState('Created')\n\n  function getTasks() {\n    axios\n      .get(\"/api/tasks\")\n      .then((res) => {\n        setTaskList(res.data)\n        setFilteredTaskList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getTasksByTag(id) {\n    axios\n      .get(`/api/tags/${id}/tasks`)\n      .then((res) => {\n        setFilteredTaskList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function filterTasksByTag(id) {\n    let result = []\n    result = taskList.filter((task) => {\n      let tags = task.tags.map((tag) => {return tag.id})\n      return tags.includes(id)\n    })\n    setTaggedTaskList(result)\n    setFilteredTaskList(result)\n    handleSort('Current')\n  }\n\n  function getTags() {\n    axios\n      .get(\"/api/tags\")\n      .then((res) => {\n        setTagList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function handleSearch(e) {\n    let searchTerm = e.target.value.toLowerCase()\n    let result = []\n    result = taggedTaskList.filter((task) =>\n      task.title.toLowerCase().search(searchTerm) != -1\n    )\n    setFilteredTaskList(result)\n  }\n\n  function handleSort(sortBy) {\n    if (sortBy === 'Current') {\n      sortBy = currentSort\n    } else {\n      setCurrentSort(sortBy)\n    }\n    let result = [...filteredTaskList]\n    if (sortBy == \"Created\") {\n      result.sort((task1, task2) => \n        {if (task1.created_at > task2.created_at) return -1\n         if (task2.created_at > task1.created_at) return 1\n         return 0})\n    } else if (sortBy == \"Edited\") {\n      result.sort((task1, task2) => \n        {if (task1.updated_at > task2.updated_at) return -1\n         if (task2.updated_at > task1.updated_at) return 1\n         return 0})\n    } else if (sortBy == \"Deadline\") {\n      result.sort((task1, task2) => \n        {if (task1.deadline === null) return 1\n         if (task2.deadline === null) return -1\n         if (task1.deadline > task2.deadline) return 1\n         if (task2.deadline > task1.deadline) return -1\n         return 0})\n    } else if (sortBy == \"Alphanumeric\") {\n      result.sort((task1, task2) => \n        task1.title.localeCompare(task2.title))\n    } else {\n      console.log(\"Error: Unknown sorting case:\" + sortBy)\n    }\n    setFilteredTaskList(result)\n  }\n\n  useEffect(() => {\n    getTasks()\n    getTags()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Sidebar tagList={tagList} getTags={getTags} filterTasksByTag={filterTasksByTag}\n        setFilteredTaskList={setFilteredTaskList} taskList={taskList}/>\n      <div className='Main'>\n        <Topbar handleSearch={handleSearch} handleSort={handleSort} \n          buttonState={showNewTask} onClickNewTask={() => setShowNewTask(!showNewTask)} />\n        {showNewTask && <NewTask setShowNewTask={setShowNewTask} getTasks={getTasks}/> }\n        <Tasks setTaskList={setTaskList} setFilteredTaskList={setFilteredTaskList} \n          tagList={tagList} filteredTaskList={filteredTaskList} getTags={() => getTags()}\n          setTaggedTaskList={setTaggedTaskList}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}