{"ast":null,"code":"import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";function TagTask(_ref){var task=_ref.task,tagList=_ref.tagList,refreshTaskNew=_ref.refreshTaskNew,getUserTags=_ref.getUserTags;function addTaskToTag(tag){axios.put(\"/api/tags/\".concat(tag.id),{do:\"add\",task:task.id}).then(function(res){refreshTaskNew(res.data);getUserTags();}).catch(function(error){return console.log(error);});}var alreadyTagged=task.tags.map(function(tag){return tag.id;});return/*#__PURE__*/_jsx(\"div\",{className:\"TaskTagList\",children:tagList.filter(function(tag){return!alreadyTagged.includes(tag.id);}).map(function(tag,index){return/*#__PURE__*/_jsx(\"h3\",{onClick:function onClick(){addTaskToTag(tag);},children:tag.name},index);})});}export default TagTask;","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/TagTask.js"],"names":["axios","TagTask","task","tagList","refreshTaskNew","getUserTags","addTaskToTag","tag","put","id","do","then","res","data","catch","error","console","log","alreadyTagged","tags","map","filter","includes","index","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,QAASC,CAAAA,OAAT,MAAiE,IAA9CC,CAAAA,IAA8C,MAA9CA,IAA8C,CAAxCC,OAAwC,MAAxCA,OAAwC,CAA/BC,cAA+B,MAA/BA,cAA+B,CAAfC,WAAe,MAAfA,WAAe,CAC/D,QAASC,CAAAA,YAAT,CAAsBC,GAAtB,CAA2B,CACzBP,KAAK,CACFQ,GADH,qBACoBD,GAAG,CAACE,EADxB,EAC8B,CAC1BC,EAAE,CAAE,KADsB,CAE1BR,IAAI,CAAEA,IAAI,CAACO,EAFe,CAD9B,EAKGE,IALH,CAKQ,SAACC,GAAD,CAAS,CACbR,cAAc,CAACQ,GAAG,CAACC,IAAL,CAAd,CACAR,WAAW,GACZ,CARH,EASGS,KATH,CASS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EATT,EAUD,CAED,GAAIG,CAAAA,aAAa,CAAGhB,IAAI,CAACiB,IAAL,CAAUC,GAAV,CAAc,SAACb,GAAD,CAAS,CAAC,MAAOA,CAAAA,GAAG,CAACE,EAAX,CAAc,CAAtC,CAApB,CAEA,mBAAQ,YAAK,SAAS,CAAC,aAAf,UACLN,OAAO,CACLkB,MADF,CACS,SAACd,GAAD,QAAS,CAACW,aAAa,CAACI,QAAd,CAAuBf,GAAG,CAACE,EAA3B,CAAV,EADT,EAEEW,GAFF,CAEM,SAACb,GAAD,CAAMgB,KAAN,CAAgB,CACnB,mBACE,WAAgB,OAAO,CAAE,kBAAI,CAACjB,YAAY,CAACC,GAAD,CAAZ,CAAkB,CAAhD,UACGA,GAAG,CAACiB,IADP,EAASD,KAAT,CADF,CAIH,CAPA,CADK,EAAR,CAUD,CAED,cAAetB,CAAAA,OAAf","sourcesContent":["import axios from \"axios\";\n\nfunction TagTask({ task, tagList, refreshTaskNew, getUserTags }) {\n  function addTaskToTag(tag) {\n    axios\n      .put(`/api/tags/${tag.id}`, {\n        do: \"add\",\n        task: task.id\n      })\n      .then((res) => {\n        refreshTaskNew(res.data)\n        getUserTags()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  let alreadyTagged = task.tags.map((tag) => {return tag.id})\n\n  return (<div className=\"TaskTagList\">\n    {tagList\n      .filter((tag) => !alreadyTagged.includes(tag.id))\n      .map((tag, index) => {\n        return (\n          <h3 key={index} onClick={()=>{addTaskToTag(tag)}}>\n            {tag.name}\n          </h3>)\n    })}\n  </div>)\n}\n\nexport default TagTask"]},"metadata":{},"sourceType":"module"}