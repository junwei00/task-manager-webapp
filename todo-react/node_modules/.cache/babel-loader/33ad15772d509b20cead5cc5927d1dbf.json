{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/cvwo-todo-app/todo-react/src/components/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewTask(_ref) {\n  _s();\n\n  let {\n    setShowNewTask,\n    getTasks\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  function handleSubmit(e) {\n    if (title == '' || description == '') {\n      alert(\"Title cannot be empty\");\n      return;\n    } else {\n      postTask();\n    }\n  }\n\n  function postTask() {\n    axios.post(\"/api/tasks\", {\n      title: title,\n      description: description,\n      deadline: deadline\n    }).then(res => {\n      setTitle('');\n      setDescription('');\n      setDeadline(new Date());\n      setShowNewTask(false);\n      getTasks();\n    }).catch(error => console.log(error));\n  }\n\n  function validateForm() {\n    if (title == '' || description == '') {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"NewTask\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => {\n          validateForm();\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Desscription\",\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => {\n          validateForm();\n          setDescription(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Deadline\",\n        value: deadline,\n        onChange: e => {\n          setDeadline(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: !formValid,\n      className: \"Submit\",\n      type: \"submit\",\n      value: \"Save Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTask, \"wyYta0Fr+NXgergX+Hw2bR0eAdw=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/oaeiu/cvwo-todo-app/todo-react/src/components/NewTask.js"],"names":["axios","useState","NewTask","setShowNewTask","getTasks","title","setTitle","description","setDescription","deadline","setDeadline","formValid","setFormValid","handleSubmit","e","alert","postTask","post","then","res","Date","catch","error","console","log","validateForm","target","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction NewTask({ setShowNewTask, getTasks }) {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [deadline, setDeadline] = useState('')\n  const [formValid, setFormValid] = useState(false)\n\n  function handleSubmit (e) {\n    if (title == '' || description == '') {\n      alert(\"Title cannot be empty\")\n      return;\n    } else {\n      postTask()\n    }\n  }\n\n  function postTask() {\n    axios\n      .post(\"/api/tasks\", {\n        title: title,\n        description: description,\n        deadline: deadline\n      })\n      .then((res) => {\n        setTitle('')\n        setDescription('')\n        setDeadline(new Date())\n        setShowNewTask(false)\n        getTasks()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function validateForm() {\n    if (title == '' || description == '') {\n      setFormValid(false)\n    } else {\n      setFormValid(true)\n    }\n  }\n\n  return (\n    <form className=\"NewTask\" onSubmit={handleSubmit}>\n      <div>\n        <input\n          type='text'\n          placeholder='Title'\n          value={title}\n          onChange={(e) => {\n            validateForm()\n            setTitle(e.target.value)}}\n        />\n      </div>\n      <div>\n        <input\n          className=\"Desscription\"\n          type='text'\n          placeholder='Description'\n          value={description}\n          onChange={(e) => {\n            validateForm()\n            setDescription(e.target.value)}}\n        />\n      </div>\n      <div>\n        <input\n          type='date'\n          placeholder='Deadline'\n          value={deadline}\n          onChange={(e) => {\n            setDeadline(e.target.value)}}\n        />\n      </div>\n      <input disabled={!formValid} className=\"Submit\" type='submit' value='Save Task'/>\n    </form>\n  );\n}\n\nexport default NewTask"]},"metadata":{},"sourceType":"module"}