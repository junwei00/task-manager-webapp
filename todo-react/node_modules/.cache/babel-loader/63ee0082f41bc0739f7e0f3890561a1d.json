{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewTask(_ref) {\n  _s();\n\n  let {\n    currentUserId,\n    setShowNewTask,\n    getUserTasks\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  function handleSubmit(e) {\n    if (title.length > 50 || description.length > 500) {\n      alert('Please keep the title below 50 characters and the description below 500 characters');\n    } else {\n      e.preventDefault();\n      postTaskUser();\n    }\n  }\n\n  function postTaskUser() {\n    axios.post(`/api/${currentUserId}/tasks`, {\n      title: title,\n      description: description,\n      deadline: deadline\n    }).then(res => {\n      setTitle('');\n      setDescription('');\n      setDeadline('');\n      setShowNewTask(false);\n      getUserTasks();\n    }).catch(error => console.log(error));\n  }\n\n  function validateForm() {\n    if (title.length === 0) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"NewTask\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"New Task:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => {\n          validateForm();\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"Description\",\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => {\n          validateForm();\n          setDescription(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Deadline\",\n        value: deadline,\n        onChange: e => {\n          validateForm();\n          setDeadline(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: !formValid,\n      className: \"Submit\",\n      type: \"submit\",\n      value: \"Save Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTask, \"wyYta0Fr+NXgergX+Hw2bR0eAdw=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/NewTask.js"],"names":["axios","useState","NewTask","currentUserId","setShowNewTask","getUserTasks","title","setTitle","description","setDescription","deadline","setDeadline","formValid","setFormValid","handleSubmit","e","length","alert","preventDefault","postTaskUser","post","then","res","catch","error","console","log","validateForm","target","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction NewTask({ currentUserId, setShowNewTask, getUserTasks }) {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [deadline, setDeadline] = useState('')\n  const [formValid, setFormValid] = useState(false)\n\n  function handleSubmit (e) {\n    if (title.length > 50 || description.length > 500) {\n      alert('Please keep the title below 50 characters and the description below 500 characters')\n    } else {\n      e.preventDefault()\n      postTaskUser()\n    }\n  }\n\n  function postTaskUser() {\n    axios\n      .post(`/api/${currentUserId}/tasks`, {\n        title: title,\n        description: description,\n        deadline: deadline\n      })\n      .then((res) => {\n        setTitle('')\n        setDescription('')\n        setDeadline('')\n        setShowNewTask(false)\n        getUserTasks()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function validateForm() {\n    if (title.length === 0) {\n      setFormValid(false)\n    } else {\n      setFormValid(true)\n    }\n  }\n\n  return (\n    <form className=\"NewTask\" onSubmit={handleSubmit}>\n      <h3>New Task:</h3>\n      <div>\n        <input\n          type='text'\n          placeholder='Title'\n          value={title}\n          onChange={(e) => {\n            validateForm()\n            setTitle(e.target.value)}}\n        />\n      </div>\n      <div>\n        <textarea\n          className=\"Description\"\n          type='text'\n          placeholder='Description'\n          value={description}\n          onChange={(e) => {\n            validateForm()\n            setDescription(e.target.value)}}\n        />\n      </div>\n      <div>\n        <input\n          type='date'\n          placeholder='Deadline'\n          value={deadline}\n          onChange={(e) => {\n            validateForm()\n            setDeadline(e.target.value)}}\n        />\n      </div>\n      <input disabled={!formValid} className=\"Submit\" type='submit' value='Save Task'/>\n    </form>\n  );\n}\n\nexport default NewTask"]},"metadata":{},"sourceType":"module"}