{"ast":null,"code":"var _jsxFileName = \"/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport TagTask from \"./TagTask\";\nimport Tag from \"./Tag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(_ref) {\n  _s();\n\n  let {\n    currentUserId,\n    index,\n    task,\n    setFilteredTaskList,\n    filteredTaskList,\n    setTaggedTaskList,\n    setTaskList,\n    tagList,\n    getUserTags,\n    refreshTaskNew\n  } = _ref;\n  const [showEditTask, setShowEditTask] = useState(false);\n  const [showTagTask, setShowTagTask] = useState(false);\n\n  function refreshTask() {\n    axios.get(`/api/tasks/${task.id}`).then(res => {\n      let newTaskList = [...filteredTaskList];\n      newTaskList[index] = res.data;\n      setFilteredTaskList(newTaskList);\n      setTaggedTaskList(newTaskList);\n      refreshTasklist();\n      getUserTags();\n    }).catch(error => console.log(error));\n  }\n\n  function refreshTasklist() {\n    axios.get(`/api/${currentUserId}/tasks`).then(res => {\n      setTaskList(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function refreshDeletedTask() {\n    let newTaskList = [...filteredTaskList];\n    newTaskList.splice(index, 1);\n    setFilteredTaskList(newTaskList);\n    setTaggedTaskList(newTaskList);\n    refreshTasklist();\n    getUserTags();\n  }\n\n  function refreshTaskStatus(newstatus) {\n    let newTaskList = [...filteredTaskList];\n    newTaskList[index].status = newstatus;\n    setFilteredTaskList(newTaskList);\n    setTaggedTaskList(newTaskList);\n    refreshTasklist();\n    getUserTags();\n  }\n\n  function refreshTaskTags(newtag) {\n    let newTaskList = [...filteredTaskList];\n    newTaskList[index].tags.push(newtag);\n    setFilteredTaskList(newTaskList);\n    setTaggedTaskList(newTaskList);\n    refreshTasklist();\n    getUserTags();\n  }\n\n  function refreshDeletedTaskTag(tagindex) {\n    let newTaskList = [...filteredTaskList];\n    newTaskList[index].tags.splice(tagindex, 1);\n    setFilteredTaskList(newTaskList);\n    setTaggedTaskList(newTaskList);\n    refreshTasklist();\n    getUserTags();\n  }\n\n  function deleteTask() {\n    axios.delete(`/api/tasks/${task.id}`).then(res => {\n      refreshDeletedTask();\n    }).catch(error => console.log(error));\n  }\n\n  function toggleFlagTask() {\n    let newstatus = task.status == \"flagged\" ? null : 'flagged';\n    axios.put(`/api/tasks/${task.id}`, {\n      status: newstatus\n    }).then(res => {\n      refreshTaskNew(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  function toggleDoneTask() {\n    let newstatus = task.status == \"done\" ? null : 'done';\n    axios.put(`/api/tasks/${task.id}`, {\n      status: newstatus\n    }).then(res => {\n      refreshTaskStatus(newstatus);\n    }).catch(error => console.log(error));\n  }\n\n  let className = \"Task\";\n\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\";\n  }\n\n  if (task.status == \"done\") {\n    className += \" Task-done\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: [task.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TagsBar\",\n        children: task.tags.map((tag, index) => {\n          return /*#__PURE__*/_jsxDEV(Tag, {\n            index: index,\n            tag: tag,\n            refreshDeletedTaskTag: refreshDeletedTaskTag,\n            task: task\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"AddTagToTask\",\n        onClick: () => setShowTagTask(!showTagTask),\n        children: showTagTask ? \"-\" : \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 10\n      }, this), showTagTask && /*#__PURE__*/_jsxDEV(TagTask, {\n        task: task,\n        tagList: tagList,\n        refreshTaskTags: refreshTaskTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"Deadline\",\n      children: [\"Deadline: \", task.deadline === null ? \"None\" : task.deadline]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDoneTask,\n        children: task.status == 'done' ? 'Undo' : 'Done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleFlagTask,\n        children: task.status == 'flagged' ? 'Unflag' : 'Flag'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEditTask(!showEditTask),\n        children: showEditTask ? 'Close' : 'Edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTask,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), showEditTask && /*#__PURE__*/_jsxDEV(EditTask, {\n      task: task,\n      index: index,\n      refreshTask: () => refreshTask(),\n      setShowEditTask: setShowEditTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"E6O+kNljy8TJBkmOI/QdaoyKiZw=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/oaeiu/todo-app/cvwo-todo-app/todo-react/src/components/Task.js"],"names":["axios","useState","EditTask","TagTask","Tag","Task","currentUserId","index","task","setFilteredTaskList","filteredTaskList","setTaggedTaskList","setTaskList","tagList","getUserTags","refreshTaskNew","showEditTask","setShowEditTask","showTagTask","setShowTagTask","refreshTask","get","id","then","res","newTaskList","data","refreshTasklist","catch","error","console","log","refreshDeletedTask","splice","refreshTaskStatus","newstatus","status","refreshTaskTags","newtag","tags","push","refreshDeletedTaskTag","tagindex","deleteTask","delete","toggleFlagTask","put","toggleDoneTask","className","title","map","tag","deadline","description"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport TagTask from \"./TagTask\";\nimport Tag from \"./Tag\"\n\nfunction Task({ \n  currentUserId, index, task,  setFilteredTaskList, filteredTaskList, setTaggedTaskList, \n  setTaskList, tagList, getUserTags, refreshTaskNew}) {\n  const [showEditTask, setShowEditTask] = useState(false)\n  const [showTagTask, setShowTagTask] = useState(false)\n\n  function refreshTask() {\n    axios\n      .get(`/api/tasks/${task.id}`)\n      .then((res) => {\n        let newTaskList = [...filteredTaskList]\n        newTaskList[index] = res.data\n        setFilteredTaskList(newTaskList)\n        setTaggedTaskList(newTaskList)\n        refreshTasklist()\n        getUserTags()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function refreshTasklist() {\n    axios\n      .get(`/api/${currentUserId}/tasks`)\n      .then((res) => {\n        setTaskList(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function refreshDeletedTask() {\n    let newTaskList = [...filteredTaskList]\n    newTaskList.splice(index, 1)\n    setFilteredTaskList(newTaskList)\n    setTaggedTaskList(newTaskList)\n    refreshTasklist()\n    getUserTags()\n  }\n\n  function refreshTaskStatus(newstatus) {\n    let newTaskList = [...filteredTaskList]\n    newTaskList[index].status = newstatus\n    setFilteredTaskList(newTaskList)\n    setTaggedTaskList(newTaskList)\n    refreshTasklist()\n    getUserTags()\n  }\n\n  function refreshTaskTags(newtag) {\n    let newTaskList = [...filteredTaskList]\n    newTaskList[index].tags.push(newtag)\n    setFilteredTaskList(newTaskList)\n    setTaggedTaskList(newTaskList)\n    refreshTasklist()\n    getUserTags()\n  }\n\n  function refreshDeletedTaskTag(tagindex) {\n    let newTaskList = [...filteredTaskList]\n    newTaskList[index].tags.splice(tagindex, 1)\n    setFilteredTaskList(newTaskList)\n    setTaggedTaskList(newTaskList)\n    refreshTasklist()\n    getUserTags()\n  }\n\n  function deleteTask() {\n    axios\n      .delete(`/api/tasks/${task.id}`)\n      .then((res) => {\n        refreshDeletedTask()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleFlagTask() {\n    let newstatus = (task.status == \"flagged\")\n               ? null\n               : 'flagged'\n    axios\n      .put(`/api/tasks/${task.id}`, {status: newstatus})\n      .then((res) => {\n        refreshTaskNew(res.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function toggleDoneTask() {\n    let newstatus = (task.status == \"done\")\n               ? null\n               : 'done'\n    axios\n      .put(`/api/tasks/${task.id}`, {status: newstatus})\n      .then((res) => {\n        refreshTaskStatus(newstatus)\n      })\n      .catch((error) => console.log(error))    \n  }\n\n  let className=\"Task\"\n  if (task.status == \"flagged\") {\n    className += \" Task-flagged\"\n  }\n  if (task.status == \"done\") {\n    className += \" Task-done\"\n  }\n\n  return (\n    <div className={className}>\n      <div className=\"Header\">\n         <h3 className=\"Title\">{task.title} </h3>\n         <div className=\"TagsBar\">\n            {task.tags.map((tag, index) => {\n             return <Tag key={index} index={index} tag={tag} refreshDeletedTaskTag={refreshDeletedTaskTag} task={task}/>\n          })} \n         </div>\n         <h3 className=\"AddTagToTask\" onClick={() => setShowTagTask(!showTagTask)}>{showTagTask ? \"-\" : \"+\"}</h3>\n         {showTagTask && <TagTask task={task} tagList={tagList} refreshTaskTags={refreshTaskTags}/>}\n      </div>\n      <h4 className=\"Deadline\">Deadline: {task.deadline === null ? \"None\" : task.deadline}</h4>\n      <p>{task.description}</p>\n      <div className=\"Buttons\">\n        <button onClick = {toggleDoneTask}>\n          {task.status == 'done' ? 'Undo' : 'Done'}\n        </button>\n        <button onClick = {toggleFlagTask}>\n          {task.status == 'flagged' ? 'Unflag' : 'Flag'}\n        </button>\n        <button onClick = {() => setShowEditTask(!showEditTask)}>\n        {showEditTask ? 'Close' : 'Edit'}\n        </button>\n        <button onClick = {deleteTask}>\n        Delete\n        </button>\n      </div>\n      {showEditTask && <EditTask task={task} index={index} refreshTask={() => refreshTask()} \n        setShowEditTask={setShowEditTask} />}\n    </div>\n  );\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}